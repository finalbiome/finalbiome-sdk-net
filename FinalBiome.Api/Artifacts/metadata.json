{"Origin":"ws://127.0.0.1:9944","Magic":"0x6D657461","Version":14,"NodeMetadata":{"Types":{"0":{"TypeFields":[{"TypeName":"[u8; 32]","TypeId":1}],"Path":["sp_core","crypto","AccountId32"],"TypeDef":"Composite"},"1":{"Length":32,"TypeId":2,"TypeDef":"Array"},"2":{"Primitive":"U8","TypeDef":"Primitive"},"3":{"TypeFields":[{"Name":"nonce","TypeName":"Index","TypeId":4},{"Name":"consumers","TypeName":"RefCount","TypeId":4},{"Name":"providers","TypeName":"RefCount","TypeId":4},{"Name":"sufficients","TypeName":"RefCount","TypeId":4},{"Name":"data","TypeName":"AccountData","TypeId":5}],"Path":["frame_system","AccountInfo"],"TypeParams":[{"Name":"Index","TypeId":4},{"Name":"AccountData","TypeId":5}],"TypeDef":"Composite"},"4":{"Primitive":"U32","TypeDef":"Primitive"},"5":{"TypeFields":[{"Name":"free","TypeName":"Balance","TypeId":6},{"Name":"reserved","TypeName":"Balance","TypeId":6},{"Name":"misc_frozen","TypeName":"Balance","TypeId":6},{"Name":"fee_frozen","TypeName":"Balance","TypeId":6}],"Path":["pallet_balances","AccountData"],"TypeParams":[{"Name":"Balance","TypeId":6}],"TypeDef":"Composite"},"6":{"Primitive":"U128","TypeDef":"Primitive"},"7":{"TypeFields":[{"Name":"normal","TypeName":"T","TypeId":8},{"Name":"operational","TypeName":"T","TypeId":8},{"Name":"mandatory","TypeName":"T","TypeId":8}],"Path":["frame_support","weights","PerDispatchClass"],"TypeParams":[{"Name":"T","TypeId":8}],"TypeDef":"Composite"},"8":{"Primitive":"U64","TypeDef":"Primitive"},"9":{"TypeFields":[{"TypeName":"[u8; 32]","TypeId":1}],"Path":["primitive_types","H256"],"TypeDef":"Composite"},"10":{"TypeId":2,"TypeDef":"Sequence"},"11":{"TypeFields":[{"Name":"logs","TypeName":"Vec<DigestItem>","TypeId":12}],"Path":["sp_runtime","generic","digest","Digest"],"TypeDef":"Composite"},"12":{"TypeId":13,"TypeDef":"Sequence"},"13":{"Variants":[{"Name":"PreRuntime","TypeFields":[{"TypeName":"ConsensusEngineId","TypeId":14},{"TypeName":"Vec<u8>","TypeId":10}],"Index":6},{"Name":"Consensus","TypeFields":[{"TypeName":"ConsensusEngineId","TypeId":14},{"TypeName":"Vec<u8>","TypeId":10}],"Index":4},{"Name":"Seal","TypeFields":[{"TypeName":"ConsensusEngineId","TypeId":14},{"TypeName":"Vec<u8>","TypeId":10}],"Index":5},{"Name":"Other","TypeFields":[{"TypeName":"Vec<u8>","TypeId":10}],"Index":0},{"Name":"RuntimeEnvironmentUpdated","TypeFields":null,"Index":8}],"Path":["sp_runtime","generic","digest","DigestItem"],"TypeDef":"Variant"},"14":{"Length":4,"TypeId":2,"TypeDef":"Array"},"15":{"TypeId":16,"TypeDef":"Sequence"},"16":{"TypeFields":[{"Name":"phase","TypeName":"Phase","TypeId":68},{"Name":"event","TypeName":"E","TypeId":17},{"Name":"topics","TypeName":"Vec<T>","TypeId":69}],"Path":["frame_system","EventRecord"],"TypeParams":[{"Name":"E","TypeId":17},{"Name":"T","TypeId":9}],"TypeDef":"Composite"},"17":{"Variants":[{"Name":"System","TypeFields":[{"TypeName":"frame_system::Event<Runtime>","TypeId":18}],"Index":0},{"Name":"Grandpa","TypeFields":[{"TypeName":"pallet_grandpa::Event","TypeId":27}],"Index":4},{"Name":"Balances","TypeFields":[{"TypeName":"pallet_balances::Event<Runtime>","TypeId":32}],"Index":5},{"Name":"TransactionPayment","TypeFields":[{"TypeName":"pallet_transaction_payment::Event<Runtime>","TypeId":34}],"Index":6},{"Name":"Sudo","TypeFields":[{"TypeName":"pallet_sudo::Event<Runtime>","TypeId":35}],"Index":7},{"Name":"TemplateModule","TypeFields":[{"TypeName":"pallet_template::Event<Runtime>","TypeId":39}],"Index":8},{"Name":"Users","TypeFields":[{"TypeName":"pallet_users::Event<Runtime>","TypeId":40}],"Index":9},{"Name":"OrganizationIdentity","TypeFields":[{"TypeName":"pallet_organization_identity::Event<Runtime>","TypeId":41}],"Index":10},{"Name":"FungibleAssets","TypeFields":[{"TypeName":"pallet_fungible_assets::Event<Runtime>","TypeId":42}],"Index":11},{"Name":"NonFungibleAssets","TypeFields":[{"TypeName":"pallet_non_fungible_assets::Event<Runtime>","TypeId":45}],"Index":12},{"Name":"Mechanics","TypeFields":[{"TypeName":"pallet_mechanics::Event<Runtime>","TypeId":53}],"Index":13}],"Path":["finalbiome_node_runtime","Event"],"TypeDef":"Variant"},"18":{"Variants":[{"Name":"ExtrinsicSuccess","TypeFields":[{"Name":"dispatch_info","TypeName":"DispatchInfo","TypeId":19}],"Index":0,"Docs":["An extrinsic completed successfully."]},{"Name":"ExtrinsicFailed","TypeFields":[{"Name":"dispatch_error","TypeName":"DispatchError","TypeId":22},{"Name":"dispatch_info","TypeName":"DispatchInfo","TypeId":19}],"Index":1,"Docs":["An extrinsic failed."]},{"Name":"CodeUpdated","TypeFields":null,"Index":2,"Docs":["`:code` was updated."]},{"Name":"NewAccount","TypeFields":[{"Name":"account","TypeName":"T::AccountId","TypeId":0}],"Index":3,"Docs":["A new account was created."]},{"Name":"KilledAccount","TypeFields":[{"Name":"account","TypeName":"T::AccountId","TypeId":0}],"Index":4,"Docs":["An account was reaped."]},{"Name":"Remarked","TypeFields":[{"Name":"sender","TypeName":"T::AccountId","TypeId":0},{"Name":"hash","TypeName":"T::Hash","TypeId":9}],"Index":5,"Docs":["On on-chain remark happened."]}],"Path":["frame_system","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Event for the System pallet."]},"19":{"TypeFields":[{"Name":"weight","TypeName":"Weight","TypeId":8},{"Name":"class","TypeName":"DispatchClass","TypeId":20},{"Name":"pays_fee","TypeName":"Pays","TypeId":21}],"Path":["frame_support","weights","DispatchInfo"],"TypeDef":"Composite"},"20":{"Variants":[{"Name":"Normal","TypeFields":null,"Index":0},{"Name":"Operational","TypeFields":null,"Index":1},{"Name":"Mandatory","TypeFields":null,"Index":2}],"Path":["frame_support","weights","DispatchClass"],"TypeDef":"Variant"},"21":{"Variants":[{"Name":"Yes","TypeFields":null,"Index":0},{"Name":"No","TypeFields":null,"Index":1}],"Path":["frame_support","weights","Pays"],"TypeDef":"Variant"},"22":{"Variants":[{"Name":"Other","TypeFields":null,"Index":0},{"Name":"CannotLookup","TypeFields":null,"Index":1},{"Name":"BadOrigin","TypeFields":null,"Index":2},{"Name":"Module","TypeFields":[{"TypeName":"ModuleError","TypeId":23}],"Index":3},{"Name":"ConsumerRemaining","TypeFields":null,"Index":4},{"Name":"NoProviders","TypeFields":null,"Index":5},{"Name":"TooManyConsumers","TypeFields":null,"Index":6},{"Name":"Token","TypeFields":[{"TypeName":"TokenError","TypeId":24}],"Index":7},{"Name":"Arithmetic","TypeFields":[{"TypeName":"ArithmeticError","TypeId":25}],"Index":8},{"Name":"Transactional","TypeFields":[{"TypeName":"TransactionalError","TypeId":26}],"Index":9}],"Path":["sp_runtime","DispatchError"],"TypeDef":"Variant"},"23":{"TypeFields":[{"Name":"index","TypeName":"u8","TypeId":2},{"Name":"error","TypeName":"[u8; MAX_MODULE_ERROR_ENCODED_SIZE]","TypeId":14}],"Path":["sp_runtime","ModuleError"],"TypeDef":"Composite"},"24":{"Variants":[{"Name":"NoFunds","TypeFields":null,"Index":0},{"Name":"WouldDie","TypeFields":null,"Index":1},{"Name":"BelowMinimum","TypeFields":null,"Index":2},{"Name":"CannotCreate","TypeFields":null,"Index":3},{"Name":"UnknownAsset","TypeFields":null,"Index":4},{"Name":"Frozen","TypeFields":null,"Index":5},{"Name":"Unsupported","TypeFields":null,"Index":6}],"Path":["sp_runtime","TokenError"],"TypeDef":"Variant"},"25":{"Variants":[{"Name":"Underflow","TypeFields":null,"Index":0},{"Name":"Overflow","TypeFields":null,"Index":1},{"Name":"DivisionByZero","TypeFields":null,"Index":2}],"Path":["sp_runtime","ArithmeticError"],"TypeDef":"Variant"},"26":{"Variants":[{"Name":"LimitReached","TypeFields":null,"Index":0},{"Name":"NoLayer","TypeFields":null,"Index":1}],"Path":["sp_runtime","TransactionalError"],"TypeDef":"Variant"},"27":{"Variants":[{"Name":"NewAuthorities","TypeFields":[{"Name":"authority_set","TypeName":"AuthorityList","TypeId":28}],"Index":0,"Docs":["New authority set has been applied."]},{"Name":"Paused","TypeFields":null,"Index":1,"Docs":["Current authority set has been paused."]},{"Name":"Resumed","TypeFields":null,"Index":2,"Docs":["Current authority set has been resumed."]}],"Path":["pallet_grandpa","pallet","Event"],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"28":{"TypeId":29,"TypeDef":"Sequence"},"29":{"TypeIds":[30,8],"TypeDef":"Tuple"},"30":{"TypeFields":[{"TypeName":"ed25519::Public","TypeId":31}],"Path":["sp_finality_grandpa","app","Public"],"TypeDef":"Composite"},"31":{"TypeFields":[{"TypeName":"[u8; 32]","TypeId":1}],"Path":["sp_core","ed25519","Public"],"TypeDef":"Composite"},"32":{"Variants":[{"Name":"Endowed","TypeFields":[{"Name":"account","TypeName":"T::AccountId","TypeId":0},{"Name":"free_balance","TypeName":"T::Balance","TypeId":6}],"Index":0,"Docs":["An account was created with some free balance."]},{"Name":"DustLost","TypeFields":[{"Name":"account","TypeName":"T::AccountId","TypeId":0},{"Name":"amount","TypeName":"T::Balance","TypeId":6}],"Index":1,"Docs":["An account was removed whose balance was non-zero but below ExistentialDeposit,","resulting in an outright loss."]},{"Name":"Transfer","TypeFields":[{"Name":"from","TypeName":"T::AccountId","TypeId":0},{"Name":"to","TypeName":"T::AccountId","TypeId":0},{"Name":"amount","TypeName":"T::Balance","TypeId":6}],"Index":2,"Docs":["Transfer succeeded."]},{"Name":"BalanceSet","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0},{"Name":"free","TypeName":"T::Balance","TypeId":6},{"Name":"reserved","TypeName":"T::Balance","TypeId":6}],"Index":3,"Docs":["A balance was set by root."]},{"Name":"Reserved","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0},{"Name":"amount","TypeName":"T::Balance","TypeId":6}],"Index":4,"Docs":["Some balance was reserved (moved from free to reserved)."]},{"Name":"Unreserved","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0},{"Name":"amount","TypeName":"T::Balance","TypeId":6}],"Index":5,"Docs":["Some balance was unreserved (moved from reserved to free)."]},{"Name":"ReserveRepatriated","TypeFields":[{"Name":"from","TypeName":"T::AccountId","TypeId":0},{"Name":"to","TypeName":"T::AccountId","TypeId":0},{"Name":"amount","TypeName":"T::Balance","TypeId":6},{"Name":"destination_status","TypeName":"Status","TypeId":33}],"Index":6,"Docs":["Some balance was moved from the reserve of the first account to the second account.","Final argument indicates the destination balance type."]},{"Name":"Deposit","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0},{"Name":"amount","TypeName":"T::Balance","TypeId":6}],"Index":7,"Docs":["Some amount was deposited (e.g. for transaction fees)."]},{"Name":"Withdraw","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0},{"Name":"amount","TypeName":"T::Balance","TypeId":6}],"Index":8,"Docs":["Some amount was withdrawn from the account (e.g. for transaction fees)."]},{"Name":"Slashed","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0},{"Name":"amount","TypeName":"T::Balance","TypeId":6}],"Index":9,"Docs":["Some amount was removed from the account (e.g. for misbehavior)."]}],"Path":["pallet_balances","pallet","Event"],"TypeParams":[{"Name":"T"},{"Name":"I"}],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"33":{"Variants":[{"Name":"Free","TypeFields":null,"Index":0},{"Name":"Reserved","TypeFields":null,"Index":1}],"Path":["frame_support","traits","tokens","misc","BalanceStatus"],"TypeDef":"Variant"},"34":{"Variants":[{"Name":"TransactionFeePaid","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0},{"Name":"actual_fee","TypeName":"BalanceOf<T>","TypeId":6},{"Name":"tip","TypeName":"BalanceOf<T>","TypeId":6}],"Index":0,"Docs":["A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,","has been paid by `who`."]}],"Path":["pallet_transaction_payment","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"35":{"Variants":[{"Name":"Sudid","TypeFields":[{"Name":"sudo_result","TypeName":"DispatchResult","TypeId":36}],"Index":0,"Docs":["A sudo just took place. \\[result\\]"]},{"Name":"KeyChanged","TypeFields":[{"Name":"old_sudoer","TypeName":"Option<T::AccountId>","TypeId":38}],"Index":1,"Docs":["The \\[sudoer\\] just switched identity; the old key is supplied if one existed."]},{"Name":"SudoAsDone","TypeFields":[{"Name":"sudo_result","TypeName":"DispatchResult","TypeId":36}],"Index":2,"Docs":["A sudo just took place. \\[result\\]"]}],"Path":["pallet_sudo","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"36":{"Variants":[{"Name":"Ok","TypeFields":[{"TypeId":37}],"Index":0},{"Name":"Err","TypeFields":[{"TypeId":22}],"Index":1}],"Path":["Result"],"TypeParams":[{"Name":"T","TypeId":37},{"Name":"E","TypeId":22}],"TypeDef":"Variant"},"37":{"TypeIds":[],"TypeDef":"Tuple"},"38":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":0}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":0}],"TypeDef":"Variant"},"39":{"Variants":[{"Name":"SomethingStored","TypeFields":[{"TypeName":"u32","TypeId":4},{"TypeName":"T::AccountId","TypeId":0}],"Index":0,"Docs":["Event documentation should end with an array that provides descriptive names for event","parameters. [something, who]"]}],"Path":["pallet_template","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"40":{"Variants":[{"Name":"KeyChanged","TypeFields":[{"Name":"old_registrar","TypeName":"Option<T::AccountId>","TypeId":38}],"Index":0,"Docs":["The \\[Registrar\\] just switched identity; the old key is supplied if one existed."]}],"Path":["pallet_users","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Events of the Users pallet."]},"41":{"Variants":[{"Name":"SomethingStored","TypeFields":[{"TypeName":"u32","TypeId":4},{"TypeName":"T::AccountId","TypeId":0}],"Index":0,"Docs":["Event documentation should end with an array that provides descriptive names for event","parameters. [something, who]"]},{"Name":"CreatedOrganization","TypeFields":[{"TypeName":"Vec<u8>","TypeId":10},{"TypeName":"T::AccountId","TypeId":0}],"Index":1,"Docs":["An organization has been created. [organization_name, who]"]},{"Name":"UpdatedOrganization","TypeFields":[{"TypeName":"OrganizationIdOf<T>","TypeId":0}],"Index":2,"Docs":["An asset class has been updated."]},{"Name":"MemberAdded","TypeFields":[{"TypeName":"OrganizationIdOf<T>","TypeId":0},{"TypeName":"T::AccountId","TypeId":0}],"Index":3,"Docs":["An member was added to an organization. [organization, member]"]},{"Name":"MemberRemoved","TypeFields":[{"TypeName":"OrganizationIdOf<T>","TypeId":0},{"TypeName":"T::AccountId","TypeId":0}],"Index":4,"Docs":["An member was removed from organization. [organization, member]"]},{"Name":"Onboard","TypeFields":[{"TypeName":"OrganizationIdOf<T>","TypeId":0},{"TypeName":"T::AccountId","TypeId":0}],"Index":5,"Docs":["Assets for the game has been airdropped."]}],"Path":["pallet_organization_identity","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"42":{"Variants":[{"Name":"Created","TypeFields":[{"Name":"asset_id","TypeName":"AssetId","TypeId":43},{"Name":"owner","TypeName":"T::AccountId","TypeId":0}],"Index":0,"Docs":["The asset has been created."]},{"Name":"Issued","TypeFields":[{"Name":"asset_id","TypeName":"AssetId","TypeId":43},{"Name":"owner","TypeName":"T::AccountId","TypeId":0},{"Name":"total_supply","TypeName":"FungibleAssetBalance","TypeId":44}],"Index":1,"Docs":["Some assets were issued."]},{"Name":"Burned","TypeFields":[{"Name":"asset_id","TypeName":"AssetId","TypeId":43},{"Name":"owner","TypeName":"T::AccountId","TypeId":0},{"Name":"balance","TypeName":"FungibleAssetBalance","TypeId":44}],"Index":2,"Docs":["Some assets were destroyed."]},{"Name":"SomethingStored","TypeFields":[{"TypeName":"u32","TypeId":4},{"TypeName":"T::AccountId","TypeId":0}],"Index":3,"Docs":["Event documentation should end with an array that provides descriptive names for event","parameters. [something, who]"]},{"Name":"Destroyed","TypeFields":[{"Name":"asset_id","TypeName":"AssetId","TypeId":43},{"Name":"owner","TypeName":"T::AccountId","TypeId":0}],"Index":4,"Docs":["An asset class was destroyed."]}],"Path":["pallet_fungible_assets","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"43":{"TypeFields":[{"TypeName":"u32","TypeId":4}],"Path":["pallet_support","types","fungible_asset_id","FungibleAssetId"],"TypeDef":"Composite"},"44":{"TypeFields":[{"TypeName":"u128","TypeId":6}],"Path":["pallet_support","types","fungible_asset_balance","FungibleAssetBalance"],"TypeDef":"Composite"},"45":{"Variants":[{"Name":"Created","TypeFields":[{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46},{"Name":"owner","TypeName":"T::AccountId","TypeId":0}],"Index":0,"Docs":["An asset class has been created."]},{"Name":"Destroyed","TypeFields":[{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46}],"Index":1,"Docs":["An asset class has been destroyed."]},{"Name":"Updated","TypeFields":[{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46}],"Index":2,"Docs":["An asset class has been updated."]},{"Name":"Issued","TypeFields":[{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46},{"Name":"asset_id","TypeName":"NonFungibleAssetId","TypeId":47},{"Name":"owner","TypeName":"T::AccountId","TypeId":0}],"Index":3,"Docs":["An asset `instance` has been issued."]},{"Name":"AttributeCreated","TypeFields":[{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46},{"Name":"key","TypeName":"AttributeKey","TypeId":48},{"Name":"value","TypeName":"AttributeValue","TypeId":49}],"Index":4,"Docs":["New attribute metadata has been set for the asset class."]},{"Name":"AttributeRemoved","TypeFields":[{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46},{"Name":"key","TypeName":"AttributeKey","TypeId":48}],"Index":5,"Docs":["Attribute metadata has been removed for the asset class."]},{"Name":"Burned","TypeFields":[{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46},{"Name":"asset_id","TypeName":"NonFungibleAssetId","TypeId":47},{"Name":"owner","TypeName":"T::AccountId","TypeId":0}],"Index":6,"Docs":["An asset `instance` was destroyed."]},{"Name":"SomethingStored","TypeFields":[{"TypeName":"u32","TypeId":4},{"TypeName":"T::AccountId","TypeId":0}],"Index":7,"Docs":["Event documentation should end with an array that provides descriptive names for event","parameters. [something, who]"]}],"Path":["pallet_non_fungible_assets","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"46":{"TypeFields":[{"TypeName":"u32","TypeId":4}],"Path":["pallet_support","types","non_fungible_class_id","NonFungibleClassId"],"TypeDef":"Composite"},"47":{"TypeFields":[{"TypeName":"u32","TypeId":4}],"Path":["pallet_support","types","non_fungible_asset_id","NonFungibleAssetId"],"TypeDef":"Composite"},"48":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":10}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":2},{"Name":"S"}],"TypeDef":"Composite"},"49":{"Variants":[{"Name":"Number","TypeFields":[{"TypeName":"NumberAttribute","TypeId":50}],"Index":0},{"Name":"Text","TypeFields":[{"TypeName":"BoundedVec<u8, AttributeValueStringLimit>","TypeId":52}],"Index":1}],"Path":["pallet_support","AttributeValue"],"TypeDef":"Variant"},"50":{"TypeFields":[{"Name":"number_value","TypeName":"u32","TypeId":4},{"Name":"number_max","TypeName":"Option<u32>","TypeId":51}],"Path":["pallet_support","NumberAttribute"],"TypeDef":"Composite"},"51":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":4}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":4}],"TypeDef":"Variant"},"52":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":10}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":2},{"Name":"S"}],"TypeDef":"Composite"},"53":{"Variants":[{"Name":"Finished","TypeFields":[{"Name":"owner","TypeName":"GameAccountOf<T>","TypeId":54},{"Name":"id","TypeName":"T::Index","TypeId":4},{"Name":"result","TypeName":"EventMechanicResult","TypeId":55}],"Index":0,"Docs":["Mechanics done."]},{"Name":"Stopped","TypeFields":[{"Name":"owner","TypeName":"GameAccountOf<T>","TypeId":54},{"Name":"id","TypeName":"T::Index","TypeId":4},{"Name":"reason","TypeName":"EventMechanicStopReasonOf<T>","TypeId":61}],"Index":1,"Docs":["Mechanics was stopped."]},{"Name":"DroppedByTimeout","TypeFields":[{"Name":"owner","TypeName":"GameAccountOf<T>","TypeId":54},{"Name":"id","TypeName":"T::Index","TypeId":4}],"Index":2,"Docs":["Mechanics as dropped by typeout."]}],"Path":["pallet_mechanics","pallet","Event"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"]},"54":{"TypeFields":[{"Name":"account_id","TypeName":"AccountId","TypeId":0},{"Name":"organization_id","TypeName":"AccountId","TypeId":0}],"Path":["pallet_support","GamerAccount"],"TypeParams":[{"Name":"AccountId","TypeId":0}],"TypeDef":"Composite"},"55":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":56}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":56}],"TypeDef":"Variant"},"56":{"Variants":[{"Name":"BuyNfa","TypeFields":[{"TypeName":"NonFungibleAssetId","TypeId":47}],"Index":0},{"Name":"Bet","TypeFields":[{"TypeName":"EventMechanicResultDataBet","TypeId":57}],"Index":1}],"Path":["pallet_mechanics","types","EventMechanicResultData"],"TypeDef":"Variant"},"57":{"TypeFields":[{"Name":"outcomes","TypeName":"MechanicDataBetOutcomes","TypeId":58},{"Name":"result","TypeName":"BetResult","TypeId":60}],"Path":["pallet_mechanics","types","EventMechanicResultDataBet"],"TypeDef":"Composite"},"58":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":59}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":4},{"Name":"S"}],"TypeDef":"Composite"},"59":{"TypeId":4,"TypeDef":"Sequence"},"60":{"Variants":[{"Name":"Won","TypeFields":null,"Index":0},{"Name":"Lost","TypeFields":null,"Index":1},{"Name":"Draw","TypeFields":null,"Index":2}],"Path":["pallet_mechanics","types","BetResult"],"TypeDef":"Variant"},"61":{"Variants":[{"Name":"UpgradeNeeded","TypeFields":[{"TypeName":"MechanicDetails<AccountId, BlockNumber>","TypeId":62}],"Index":0}],"Path":["pallet_mechanics","types","EventMechanicStopReason"],"TypeParams":[{"Name":"AccountId","TypeId":0},{"Name":"BlockNumber","TypeId":4}],"TypeDef":"Variant"},"62":{"TypeFields":[{"Name":"owner","TypeName":"GamerAccount<AccountId>","TypeId":54},{"Name":"timeout_id","TypeName":"BlockNumber","TypeId":4},{"Name":"locked","TypeName":"BoundedVec<LockedAccet, DefaultListLengthLimit>","TypeId":63},{"Name":"data","TypeName":"MechanicData","TypeId":66}],"Path":["pallet_mechanics","types","MechanicDetails"],"TypeParams":[{"Name":"AccountId","TypeId":0},{"Name":"BlockNumber","TypeId":4}],"TypeDef":"Composite"},"63":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":65}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":64},{"Name":"S"}],"TypeDef":"Composite"},"64":{"Variants":[{"Name":"Fa","TypeFields":[{"TypeName":"FungibleAssetId","TypeId":43},{"TypeName":"FungibleAssetBalance","TypeId":44}],"Index":0},{"Name":"Nfa","TypeFields":[{"TypeName":"NonFungibleClassId","TypeId":46},{"TypeName":"NonFungibleAssetId","TypeId":47}],"Index":1}],"Path":["pallet_support","LockedAccet"],"TypeDef":"Variant"},"65":{"TypeId":64,"TypeDef":"Sequence"},"66":{"Variants":[{"Name":"BuyNfa","TypeFields":null,"Index":0},{"Name":"Bet","TypeFields":[{"TypeName":"MechanicDataBet","TypeId":67}],"Index":1}],"Path":["pallet_mechanics","types","MechanicData"],"TypeDef":"Variant"},"67":{"TypeFields":[{"Name":"outcomes","TypeName":"MechanicDataBetOutcomes","TypeId":58}],"Path":["pallet_mechanics","types","MechanicDataBet"],"TypeDef":"Composite"},"68":{"Variants":[{"Name":"ApplyExtrinsic","TypeFields":[{"TypeName":"u32","TypeId":4}],"Index":0},{"Name":"Finalization","TypeFields":null,"Index":1},{"Name":"Initialization","TypeFields":null,"Index":2}],"Path":["frame_system","Phase"],"TypeDef":"Variant"},"69":{"TypeId":9,"TypeDef":"Sequence"},"70":{"TypeId":71,"TypeDef":"Sequence"},"71":{"TypeIds":[4,4],"TypeDef":"Tuple"},"72":{"TypeFields":[{"Name":"spec_version","TypeName":"codec::Compact<u32>","TypeId":73},{"Name":"spec_name","TypeName":"sp_runtime::RuntimeString","TypeId":74}],"Path":["frame_system","LastRuntimeUpgradeInfo"],"TypeDef":"Composite"},"73":{"TypeId":4,"TypeDef":"Compact"},"74":{"Primitive":"Str","TypeDef":"Primitive"},"75":{"Primitive":"Bool","TypeDef":"Primitive"},"76":{"Variants":[{"Name":"fill_block","TypeFields":[{"Name":"ratio","TypeName":"Perbill","TypeId":77}],"Index":0,"Docs":["A dispatch that will fill the block weight up to the given ratio."]},{"Name":"remark","TypeFields":[{"Name":"remark","TypeName":"Vec<u8>","TypeId":10}],"Index":1,"Docs":["Make some on-chain remark.","","# <weight>","- `O(1)`","# </weight>"]},{"Name":"set_heap_pages","TypeFields":[{"Name":"pages","TypeName":"u64","TypeId":8}],"Index":2,"Docs":["Set the number of pages in the WebAssembly environment's heap."]},{"Name":"set_code","TypeFields":[{"Name":"code","TypeName":"Vec<u8>","TypeId":10}],"Index":3,"Docs":["Set the new runtime code.","","# <weight>","- `O(C + S)` where `C` length of `code` and `S` complexity of `can_set_code`","- 1 call to `can_set_code`: `O(S)` (calls `sp_io::misc::runtime_version` which is","  expensive).","- 1 storage write (codec `O(C)`).","- 1 digest item.","- 1 event.","The weight of this function is dependent on the runtime, but generally this is very","expensive. We will treat this as a full block.","# </weight>"]},{"Name":"set_code_without_checks","TypeFields":[{"Name":"code","TypeName":"Vec<u8>","TypeId":10}],"Index":4,"Docs":["Set the new runtime code without doing any checks of the given `code`.","","# <weight>","- `O(C)` where `C` length of `code`","- 1 storage write (codec `O(C)`).","- 1 digest item.","- 1 event.","The weight of this function is dependent on the runtime. We will treat this as a full","block. # </weight>"]},{"Name":"set_storage","TypeFields":[{"Name":"items","TypeName":"Vec<KeyValue>","TypeId":78}],"Index":5,"Docs":["Set some items of storage."]},{"Name":"kill_storage","TypeFields":[{"Name":"keys","TypeName":"Vec<Key>","TypeId":80}],"Index":6,"Docs":["Kill some items from storage."]},{"Name":"kill_prefix","TypeFields":[{"Name":"prefix","TypeName":"Key","TypeId":10},{"Name":"subkeys","TypeName":"u32","TypeId":4}],"Index":7,"Docs":["Kill all storage items with a key that starts with the given prefix.","","**NOTE:** We rely on the Root origin to provide us the number of subkeys under","the prefix we are removing to accurately calculate the weight of this function."]},{"Name":"remark_with_event","TypeFields":[{"Name":"remark","TypeName":"Vec<u8>","TypeId":10}],"Index":8,"Docs":["Make some on-chain remark and emit event."]}],"Path":["frame_system","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"77":{"TypeFields":[{"TypeName":"u32","TypeId":4}],"Path":["sp_arithmetic","per_things","Perbill"],"TypeDef":"Composite"},"78":{"TypeId":79,"TypeDef":"Sequence"},"79":{"TypeIds":[10,10],"TypeDef":"Tuple"},"80":{"TypeId":10,"TypeDef":"Sequence"},"81":{"TypeFields":[{"Name":"base_block","TypeName":"Weight","TypeId":8},{"Name":"max_block","TypeName":"Weight","TypeId":8},{"Name":"per_class","TypeName":"PerDispatchClass<WeightsPerClass>","TypeId":82}],"Path":["frame_system","limits","BlockWeights"],"TypeDef":"Composite"},"82":{"TypeFields":[{"Name":"normal","TypeName":"T","TypeId":83},{"Name":"operational","TypeName":"T","TypeId":83},{"Name":"mandatory","TypeName":"T","TypeId":83}],"Path":["frame_support","weights","PerDispatchClass"],"TypeParams":[{"Name":"T","TypeId":83}],"TypeDef":"Composite"},"83":{"TypeFields":[{"Name":"base_extrinsic","TypeName":"Weight","TypeId":8},{"Name":"max_extrinsic","TypeName":"Option<Weight>","TypeId":84},{"Name":"max_total","TypeName":"Option<Weight>","TypeId":84},{"Name":"reserved","TypeName":"Option<Weight>","TypeId":84}],"Path":["frame_system","limits","WeightsPerClass"],"TypeDef":"Composite"},"84":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":8}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":8}],"TypeDef":"Variant"},"85":{"TypeFields":[{"Name":"max","TypeName":"PerDispatchClass<u32>","TypeId":86}],"Path":["frame_system","limits","BlockLength"],"TypeDef":"Composite"},"86":{"TypeFields":[{"Name":"normal","TypeName":"T","TypeId":4},{"Name":"operational","TypeName":"T","TypeId":4},{"Name":"mandatory","TypeName":"T","TypeId":4}],"Path":["frame_support","weights","PerDispatchClass"],"TypeParams":[{"Name":"T","TypeId":4}],"TypeDef":"Composite"},"87":{"TypeFields":[{"Name":"read","TypeName":"Weight","TypeId":8},{"Name":"write","TypeName":"Weight","TypeId":8}],"Path":["frame_support","weights","RuntimeDbWeight"],"TypeDef":"Composite"},"88":{"TypeFields":[{"Name":"spec_name","TypeName":"RuntimeString","TypeId":74},{"Name":"impl_name","TypeName":"RuntimeString","TypeId":74},{"Name":"authoring_version","TypeName":"u32","TypeId":4},{"Name":"spec_version","TypeName":"u32","TypeId":4},{"Name":"impl_version","TypeName":"u32","TypeId":4},{"Name":"apis","TypeName":"ApisVec","TypeId":89},{"Name":"transaction_version","TypeName":"u32","TypeId":4},{"Name":"state_version","TypeName":"u8","TypeId":2}],"Path":["sp_version","RuntimeVersion"],"TypeDef":"Composite"},"89":{"TypeFields":[{"TypeId":90}],"Path":["Cow"],"TypeParams":[{"Name":"T","TypeId":90}],"TypeDef":"Composite"},"90":{"TypeId":91,"TypeDef":"Sequence"},"91":{"TypeIds":[92,4],"TypeDef":"Tuple"},"92":{"Length":8,"TypeId":2,"TypeDef":"Array"},"93":{"Primitive":"U16","TypeDef":"Primitive"},"94":{"Variants":[{"Name":"InvalidSpecName","TypeFields":null,"Index":0,"Docs":["The name of specification does not match between the current runtime","and the new runtime."]},{"Name":"SpecVersionNeedsToIncrease","TypeFields":null,"Index":1,"Docs":["The specification version is not allowed to decrease between the current runtime","and the new runtime."]},{"Name":"FailedToExtractRuntimeVersion","TypeFields":null,"Index":2,"Docs":["Failed to extract the runtime version from the new runtime.","","Either calling `Core_version` or decoding `RuntimeVersion` failed."]},{"Name":"NonDefaultComposite","TypeFields":null,"Index":3,"Docs":["Suicide called when the account has non-default composite data."]},{"Name":"NonZeroRefCount","TypeFields":null,"Index":4,"Docs":["There is a non-zero reference count preventing the account from being purged."]},{"Name":"CallFiltered","TypeFields":null,"Index":5,"Docs":["The origin filter prevent the call to be dispatched."]}],"Path":["frame_system","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Error for the System pallet"]},"95":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":69}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":9},{"Name":"S"}],"TypeDef":"Composite"},"96":{"Variants":[{"Name":"set","TypeFields":[{"Name":"now","TypeName":"T::Moment","TypeId":97}],"Index":0,"Docs":["Set the current time.","","This call should be invoked exactly once per block. It will panic at the finalization","phase, if this call hasn't been invoked by that time.","","The timestamp should be greater than the previous one by the amount specified by","`MinimumPeriod`.","","The dispatch origin for this call must be `Inherent`.","","# <weight>","- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)","- 1 storage read and 1 storage mutation (codec `O(1)`). (because of `DidUpdate::take` in","  `on_finalize`)","- 1 event handler `on_timestamp_set`. Must be `O(1)`.","# </weight>"]}],"Path":["pallet_timestamp","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"97":{"TypeId":8,"TypeDef":"Compact"},"98":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":101}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":99},{"Name":"S"}],"TypeDef":"Composite"},"99":{"TypeFields":[{"TypeName":"sr25519::Public","TypeId":100}],"Path":["sp_consensus_aura","sr25519","app_sr25519","Public"],"TypeDef":"Composite"},"100":{"TypeFields":[{"TypeName":"[u8; 32]","TypeId":1}],"Path":["sp_core","sr25519","Public"],"TypeDef":"Composite"},"101":{"TypeId":99,"TypeDef":"Sequence"},"102":{"TypeFields":[{"TypeName":"u64","TypeId":8}],"Path":["sp_consensus_slots","Slot"],"TypeDef":"Composite"},"103":{"Variants":[{"Name":"Live","TypeFields":null,"Index":0},{"Name":"PendingPause","TypeFields":[{"Name":"scheduled_at","TypeName":"N","TypeId":4},{"Name":"delay","TypeName":"N","TypeId":4}],"Index":1},{"Name":"Paused","TypeFields":null,"Index":2},{"Name":"PendingResume","TypeFields":[{"Name":"scheduled_at","TypeName":"N","TypeId":4},{"Name":"delay","TypeName":"N","TypeId":4}],"Index":3}],"Path":["pallet_grandpa","StoredState"],"TypeParams":[{"Name":"N","TypeId":4}],"TypeDef":"Variant"},"104":{"TypeFields":[{"Name":"scheduled_at","TypeName":"N","TypeId":4},{"Name":"delay","TypeName":"N","TypeId":4},{"Name":"next_authorities","TypeName":"BoundedAuthorityList<Limit>","TypeId":105},{"Name":"forced","TypeName":"Option<N>","TypeId":51}],"Path":["pallet_grandpa","StoredPendingChange"],"TypeParams":[{"Name":"N","TypeId":4},{"Name":"Limit"}],"TypeDef":"Composite"},"105":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":28}],"Path":["sp_runtime","bounded","weak_bounded_vec","WeakBoundedVec"],"TypeParams":[{"Name":"T","TypeId":29},{"Name":"S"}],"TypeDef":"Composite"},"106":{"Variants":[{"Name":"report_equivocation","TypeFields":[{"Name":"equivocation_proof","TypeName":"Box<EquivocationProof<T::Hash, T::BlockNumber>>","TypeId":107},{"Name":"key_owner_proof","TypeName":"T::KeyOwnerProof","TypeId":118}],"Index":0,"Docs":["Report voter equivocation/misbehavior. This method will verify the","equivocation proof and validate the given key ownership proof","against the extracted offender. If both are valid, the offence","will be reported."]},{"Name":"report_equivocation_unsigned","TypeFields":[{"Name":"equivocation_proof","TypeName":"Box<EquivocationProof<T::Hash, T::BlockNumber>>","TypeId":107},{"Name":"key_owner_proof","TypeName":"T::KeyOwnerProof","TypeId":118}],"Index":1,"Docs":["Report voter equivocation/misbehavior. This method will verify the","equivocation proof and validate the given key ownership proof","against the extracted offender. If both are valid, the offence","will be reported.","","This extrinsic must be called unsigned and it is expected that only","block authors will call it (validated in `ValidateUnsigned`), as such","if the block author is defined it will be defined as the equivocation","reporter."]},{"Name":"note_stalled","TypeFields":[{"Name":"delay","TypeName":"T::BlockNumber","TypeId":4},{"Name":"best_finalized_block_number","TypeName":"T::BlockNumber","TypeId":4}],"Index":2,"Docs":["Note that the current authority set of the GRANDPA finality gadget has stalled.","","This will trigger a forced authority set change at the beginning of the next session, to","be enacted `delay` blocks after that. The `delay` should be high enough to safely assume","that the block signalling the forced change will not be re-orged e.g. 1000 blocks.","The block production rate (which may be slowed down because of finality lagging) should","be taken into account when choosing the `delay`. The GRANDPA voters based on the new","authority will start voting on top of `best_finalized_block_number` for new finalized","blocks. `best_finalized_block_number` should be the highest of the latest finalized","block of all validators of the new authority set.","","Only callable by root."]}],"Path":["pallet_grandpa","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"107":{"TypeFields":[{"Name":"set_id","TypeName":"SetId","TypeId":8},{"Name":"equivocation","TypeName":"Equivocation<H, N>","TypeId":108}],"Path":["sp_finality_grandpa","EquivocationProof"],"TypeParams":[{"Name":"H","TypeId":9},{"Name":"N","TypeId":4}],"TypeDef":"Composite"},"108":{"Variants":[{"Name":"Prevote","TypeFields":[{"TypeName":"grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>","TypeId":109}],"Index":0},{"Name":"Precommit","TypeFields":[{"TypeName":"grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>","TypeId":115}],"Index":1}],"Path":["sp_finality_grandpa","Equivocation"],"TypeParams":[{"Name":"H","TypeId":9},{"Name":"N","TypeId":4}],"TypeDef":"Variant"},"109":{"TypeFields":[{"Name":"round_number","TypeName":"u64","TypeId":8},{"Name":"identity","TypeName":"Id","TypeId":30},{"Name":"first","TypeName":"(V, S)","TypeId":114},{"Name":"second","TypeName":"(V, S)","TypeId":114}],"Path":["finality_grandpa","Equivocation"],"TypeParams":[{"Name":"Id","TypeId":30},{"Name":"V","TypeId":110},{"Name":"S","TypeId":111}],"TypeDef":"Composite"},"110":{"TypeFields":[{"Name":"target_hash","TypeName":"H","TypeId":9},{"Name":"target_number","TypeName":"N","TypeId":4}],"Path":["finality_grandpa","Prevote"],"TypeParams":[{"Name":"H","TypeId":9},{"Name":"N","TypeId":4}],"TypeDef":"Composite"},"111":{"TypeFields":[{"TypeName":"ed25519::Signature","TypeId":112}],"Path":["sp_finality_grandpa","app","Signature"],"TypeDef":"Composite"},"112":{"TypeFields":[{"TypeName":"[u8; 64]","TypeId":113}],"Path":["sp_core","ed25519","Signature"],"TypeDef":"Composite"},"113":{"Length":64,"TypeId":2,"TypeDef":"Array"},"114":{"TypeIds":[110,111],"TypeDef":"Tuple"},"115":{"TypeFields":[{"Name":"round_number","TypeName":"u64","TypeId":8},{"Name":"identity","TypeName":"Id","TypeId":30},{"Name":"first","TypeName":"(V, S)","TypeId":117},{"Name":"second","TypeName":"(V, S)","TypeId":117}],"Path":["finality_grandpa","Equivocation"],"TypeParams":[{"Name":"Id","TypeId":30},{"Name":"V","TypeId":116},{"Name":"S","TypeId":111}],"TypeDef":"Composite"},"116":{"TypeFields":[{"Name":"target_hash","TypeName":"H","TypeId":9},{"Name":"target_number","TypeName":"N","TypeId":4}],"Path":["finality_grandpa","Precommit"],"TypeParams":[{"Name":"H","TypeId":9},{"Name":"N","TypeId":4}],"TypeDef":"Composite"},"117":{"TypeIds":[116,111],"TypeDef":"Tuple"},"118":{"Variants":null,"Path":["sp_core","Void"],"TypeDef":"Variant"},"119":{"Variants":[{"Name":"PauseFailed","TypeFields":null,"Index":0,"Docs":["Attempt to signal GRANDPA pause when the authority set isn't live","(either paused or already pending pause)."]},{"Name":"ResumeFailed","TypeFields":null,"Index":1,"Docs":["Attempt to signal GRANDPA resume when the authority set isn't paused","(either live or already pending resume)."]},{"Name":"ChangePending","TypeFields":null,"Index":2,"Docs":["Attempt to signal GRANDPA change with one already pending."]},{"Name":"TooSoon","TypeFields":null,"Index":3,"Docs":["Cannot signal forced change so soon after last."]},{"Name":"InvalidKeyOwnershipProof","TypeFields":null,"Index":4,"Docs":["A key ownership proof provided as part of an equivocation report is invalid."]},{"Name":"InvalidEquivocationProof","TypeFields":null,"Index":5,"Docs":["An equivocation proof provided as part of an equivocation report is invalid."]},{"Name":"DuplicateOffenceReport","TypeFields":null,"Index":6,"Docs":["A given equivocation report is valid but already previously reported."]}],"Path":["pallet_grandpa","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"]},"120":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":123}],"Path":["sp_runtime","bounded","weak_bounded_vec","WeakBoundedVec"],"TypeParams":[{"Name":"T","TypeId":121},{"Name":"S"}],"TypeDef":"Composite"},"121":{"TypeFields":[{"Name":"id","TypeName":"LockIdentifier","TypeId":92},{"Name":"amount","TypeName":"Balance","TypeId":6},{"Name":"reasons","TypeName":"Reasons","TypeId":122}],"Path":["pallet_balances","BalanceLock"],"TypeParams":[{"Name":"Balance","TypeId":6}],"TypeDef":"Composite"},"122":{"Variants":[{"Name":"Fee","TypeFields":null,"Index":0},{"Name":"Misc","TypeFields":null,"Index":1},{"Name":"All","TypeFields":null,"Index":2}],"Path":["pallet_balances","Reasons"],"TypeDef":"Variant"},"123":{"TypeId":121,"TypeDef":"Sequence"},"124":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":126}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":125},{"Name":"S"}],"TypeDef":"Composite"},"125":{"TypeFields":[{"Name":"id","TypeName":"ReserveIdentifier","TypeId":92},{"Name":"amount","TypeName":"Balance","TypeId":6}],"Path":["pallet_balances","ReserveData"],"TypeParams":[{"Name":"ReserveIdentifier","TypeId":92},{"Name":"Balance","TypeId":6}],"TypeDef":"Composite"},"126":{"TypeId":125,"TypeDef":"Sequence"},"127":{"Variants":[{"Name":"V1_0_0","TypeFields":null,"Index":0},{"Name":"V2_0_0","TypeFields":null,"Index":1}],"Path":["pallet_balances","Releases"],"TypeDef":"Variant"},"128":{"Variants":[{"Name":"transfer","TypeFields":[{"Name":"dest","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"value","TypeName":"T::Balance","TypeId":132}],"Index":0,"Docs":["Transfer some liquid free balance to another account.","","`transfer` will set the `FreeBalance` of the sender and receiver.","If the sender's account is below the existential deposit as a result","of the transfer, the account will be reaped.","","The dispatch origin for this call must be `Signed` by the transactor.","","# <weight>","- Dependent on arguments but not critical, given proper implementations for input config","  types. See related functions below.","- It contains a limited number of reads and writes internally and no complex","  computation.","","Related functions:","","  - `ensure_can_withdraw` is always called internally but has a bounded complexity.","  - Transferring balances to accounts that did not exist before will cause","    `T::OnNewAccount::on_new_account` to be called.","  - Removing enough funds from an account will trigger `T::DustRemoval::on_unbalanced`.","  - `transfer_keep_alive` works the same way as `transfer`, but has an additional check","    that the transfer will not kill the origin account.","---------------------------------","- Origin account is already in memory, so no DB operations for them.","# </weight>"]},{"Name":"set_balance","TypeFields":[{"Name":"who","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"new_free","TypeName":"T::Balance","TypeId":132},{"Name":"new_reserved","TypeName":"T::Balance","TypeId":132}],"Index":1,"Docs":["Set the balances of a given account.","","This will alter `FreeBalance` and `ReservedBalance` in storage. it will","also alter the total issuance of the system (`TotalIssuance`) appropriately.","If the new free or reserved balance is below the existential deposit,","it will reset the account nonce (`frame_system::AccountNonce`).","","The dispatch origin for this call is `root`."]},{"Name":"force_transfer","TypeFields":[{"Name":"source","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"dest","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"value","TypeName":"T::Balance","TypeId":132}],"Index":2,"Docs":["Exactly as `transfer`, except the origin must be root and the source account may be","specified.","# <weight>","- Same as transfer, but additional read and write because the source account is not","  assumed to be in the overlay.","# </weight>"]},{"Name":"transfer_keep_alive","TypeFields":[{"Name":"dest","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"value","TypeName":"T::Balance","TypeId":132}],"Index":3,"Docs":["Same as the [`transfer`] call, but with a check that the transfer will not kill the","origin account.","","99% of the time you want [`transfer`] instead.","","[`transfer`]: struct.Pallet.html#method.transfer"]},{"Name":"transfer_all","TypeFields":[{"Name":"dest","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"keep_alive","TypeName":"bool","TypeId":75}],"Index":4,"Docs":["Transfer the entire transferable balance from the caller account.","","NOTE: This function only attempts to transfer _transferable_ balances. This means that","any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be","transferred by this function. To ensure that this function results in a killed account,","you might need to prepare the account by removing any reference counters, storage","deposits, etc...","","The dispatch origin of this call must be Signed.","","- `dest`: The recipient of the transfer.","- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all","  of the funds the account has, causing the sender account to be killed (false), or","  transfer everything except at least the existential deposit, which will guarantee to","  keep the sender account alive (true). # <weight>","- O(1). Just like transfer, but reading the user's transferable balance first.","  #</weight>"]},{"Name":"force_unreserve","TypeFields":[{"Name":"who","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"amount","TypeName":"T::Balance","TypeId":6}],"Index":5,"Docs":["Unreserve some balance from a user by force.","","Can only be called by ROOT."]}],"Path":["pallet_balances","pallet","Call"],"TypeParams":[{"Name":"T"},{"Name":"I"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"129":{"Variants":[{"Name":"Id","TypeFields":[{"TypeName":"AccountId","TypeId":0}],"Index":0},{"Name":"Index","TypeFields":[{"TypeName":"AccountIndex","TypeId":130}],"Index":1},{"Name":"Raw","TypeFields":[{"TypeName":"Vec<u8>","TypeId":10}],"Index":2},{"Name":"Address32","TypeFields":[{"TypeName":"[u8; 32]","TypeId":1}],"Index":3},{"Name":"Address20","TypeFields":[{"TypeName":"[u8; 20]","TypeId":131}],"Index":4}],"Path":["sp_runtime","multiaddress","MultiAddress"],"TypeParams":[{"Name":"AccountId","TypeId":0},{"Name":"AccountIndex","TypeId":37}],"TypeDef":"Variant"},"130":{"TypeId":37,"TypeDef":"Compact"},"131":{"Length":20,"TypeId":2,"TypeDef":"Array"},"132":{"TypeId":6,"TypeDef":"Compact"},"133":{"Variants":[{"Name":"VestingBalance","TypeFields":null,"Index":0,"Docs":["Vesting balance too high to send value"]},{"Name":"LiquidityRestrictions","TypeFields":null,"Index":1,"Docs":["Account liquidity restrictions prevent withdrawal"]},{"Name":"InsufficientBalance","TypeFields":null,"Index":2,"Docs":["Balance too low to send value"]},{"Name":"ExistentialDeposit","TypeFields":null,"Index":3,"Docs":["Value too low to create account due to existential deposit"]},{"Name":"KeepAlive","TypeFields":null,"Index":4,"Docs":["Transfer/payment would kill account"]},{"Name":"ExistingVestingSchedule","TypeFields":null,"Index":5,"Docs":["A vesting schedule already exists for this account"]},{"Name":"DeadAccount","TypeFields":null,"Index":6,"Docs":["Beneficiary account must pre-exist"]},{"Name":"TooManyReserves","TypeFields":null,"Index":7,"Docs":["Number of named reserves exceed MaxReserves"]}],"Path":["pallet_balances","pallet","Error"],"TypeParams":[{"Name":"T"},{"Name":"I"}],"TypeDef":"Variant","Docs":["\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"]},"134":{"TypeFields":[{"TypeName":"u128","TypeId":6}],"Path":["sp_arithmetic","fixed_point","FixedU128"],"TypeDef":"Composite"},"135":{"Variants":[{"Name":"V1Ancient","TypeFields":null,"Index":0},{"Name":"V2","TypeFields":null,"Index":1}],"Path":["pallet_transaction_payment","Releases"],"TypeDef":"Variant"},"136":{"Variants":[{"Name":"sudo","TypeFields":[{"Name":"call","TypeName":"Box<<T as Config>::Call>","TypeId":137}],"Index":0,"Docs":["Authenticates the sudo key and dispatches a function call with `Root` origin.","","The dispatch origin for this call must be _Signed_.","","# <weight>","- O(1).","- Limited storage reads.","- One DB write (event).","- Weight of derivative `call` execution + 10,000.","# </weight>"]},{"Name":"sudo_unchecked_weight","TypeFields":[{"Name":"call","TypeName":"Box<<T as Config>::Call>","TypeId":137},{"Name":"weight","TypeName":"Weight","TypeId":8}],"Index":1,"Docs":["Authenticates the sudo key and dispatches a function call with `Root` origin.","This function does not check the weight of the call, and instead allows the","Sudo user to specify the weight of the call.","","The dispatch origin for this call must be _Signed_.","","# <weight>","- O(1).","- The weight of this call is defined by the caller.","# </weight>"]},{"Name":"set_key","TypeFields":[{"Name":"new","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129}],"Index":2,"Docs":["Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo","key.","","The dispatch origin for this call must be _Signed_.","","# <weight>","- O(1).","- Limited storage reads.","- One DB change.","# </weight>"]},{"Name":"sudo_as","TypeFields":[{"Name":"who","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"call","TypeName":"Box<<T as Config>::Call>","TypeId":137}],"Index":3,"Docs":["Authenticates the sudo key and dispatches a function call with `Signed` origin from","a given account.","","The dispatch origin for this call must be _Signed_.","","# <weight>","- O(1).","- Limited storage reads.","- One DB write (event).","- Weight of derivative `call` execution + 10,000.","# </weight>"]}],"Path":["pallet_sudo","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"137":{"Variants":[{"Name":"System","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>","TypeId":76}],"Index":0},{"Name":"Timestamp","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>","TypeId":96}],"Index":2},{"Name":"Grandpa","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>","TypeId":106}],"Index":4},{"Name":"Balances","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>","TypeId":128}],"Index":5},{"Name":"Sudo","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>","TypeId":136}],"Index":7},{"Name":"TemplateModule","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TemplateModule, Runtime>","TypeId":138}],"Index":8},{"Name":"Users","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Users, Runtime>","TypeId":139}],"Index":9},{"Name":"OrganizationIdentity","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<OrganizationIdentity, Runtime>","TypeId":140}],"Index":10},{"Name":"FungibleAssets","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FungibleAssets, Runtime>","TypeId":148}],"Index":11},{"Name":"NonFungibleAssets","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NonFungibleAssets, Runtime>","TypeId":154}],"Index":12},{"Name":"Mechanics","TypeFields":[{"TypeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Mechanics, Runtime>","TypeId":172}],"Index":13}],"Path":["finalbiome_node_runtime","Call"],"TypeDef":"Variant"},"138":{"Variants":[{"Name":"do_something","TypeFields":[{"Name":"something","TypeName":"u32","TypeId":4}],"Index":0,"Docs":["An example dispatchable that takes a singles value as a parameter, writes the value to","storage and emits an event. This function must be dispatched by a signed extrinsic."]},{"Name":"cause_error","TypeFields":null,"Index":1,"Docs":["An example dispatchable that may throw a custom error."]}],"Path":["pallet_template","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"139":{"Variants":[{"Name":"set_registrar_key","TypeFields":[{"Name":"new","TypeName":"AccountIdLookupOf<T>","TypeId":129}],"Index":0,"Docs":["Authenticates the current registrar key and sets the given AccountId (`new`) as the new","registrar key.","","The dispatch origin for this call must be _Signed_.","","# <weight>","- O(1).","- One DB read.","- One DB change.","# </weight>"]},{"Name":"sign_up","TypeFields":[{"Name":"sign","TypeName":"BoundedVec<u8, ConstU32<64>>","TypeId":52}],"Index":1,"Docs":["Register a new account.","","User can register only once."]}],"Path":["pallet_users","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"140":{"Variants":[{"Name":"create_organization","TypeFields":[{"Name":"name","TypeName":"Vec<u8>","TypeId":10}],"Index":0,"Docs":["Create an organization.","Will return an OrganizationExists error if the organization has already","been created. Will emit a CreatedOrganization event on success.","","The dispatch origin for this call must be Signed."]},{"Name":"add_member","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0}],"Index":1,"Docs":["Add member to an organization.","","# Events","* `MemberAdded`","# Errors","* `NotOrganization` if origin not an organization","* `MembershipLimitReached` if members limit exceeded","* `InvalidMember` if member is organization","* `AlreadyMember` if member already added"]},{"Name":"remove_member","TypeFields":[{"Name":"who","TypeName":"T::AccountId","TypeId":0}],"Index":2,"Docs":["Removes a member from organization.","","# Events","* `MemberRemoved`","","# Errors","* `NotOrganization` if origin not an organization","* `NotMember` if a member doesn't exist","* ``"]},{"Name":"set_onboarding_assets","TypeFields":[{"Name":"organization_id","TypeName":"T::AccountId","TypeId":0},{"Name":"assets","TypeName":"OnboardingAssets","TypeId":141}],"Index":3,"Docs":["Set assets which will be airdroped at game onboarding"]},{"Name":"onboarding","TypeFields":[{"Name":"organization_id","TypeName":"T::AccountId","TypeId":0}],"Index":4,"Docs":["Onboirding to game"]}],"Path":["pallet_organization_identity","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"141":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":142}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":142}],"TypeDef":"Variant"},"142":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":147}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":143},{"Name":"S"}],"TypeDef":"Composite"},"143":{"Variants":[{"Name":"Fa","TypeFields":[{"TypeName":"FungibleAssetId","TypeId":43},{"TypeName":"FungibleAssetBalance","TypeId":44}],"Index":0},{"Name":"Nfa","TypeFields":[{"TypeName":"NonFungibleClassId","TypeId":46},{"TypeName":"AttributeList","TypeId":144}],"Index":1}],"Path":["pallet_organization_identity","types","AirDropAsset"],"TypeDef":"Variant"},"144":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":146}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":145},{"Name":"S"}],"TypeDef":"Composite"},"145":{"TypeFields":[{"Name":"key","TypeName":"AttributeKey","TypeId":48},{"Name":"value","TypeName":"AttributeValue","TypeId":49}],"Path":["pallet_support","Attribute"],"TypeDef":"Composite"},"146":{"TypeId":145,"TypeDef":"Sequence"},"147":{"TypeId":143,"TypeDef":"Sequence"},"148":{"Variants":[{"Name":"create","TypeFields":[{"Name":"organization_id","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"name","TypeName":"Vec<u8>","TypeId":10},{"Name":"top_upped","TypeName":"Option<TopUppedFA>","TypeId":149},{"Name":"cup_global","TypeName":"Option<CupFA>","TypeId":151},{"Name":"cup_local","TypeName":"Option<CupFA>","TypeId":151}],"Index":0,"Docs":["Issue a new fungible asset from.","","This new asset has owner as orgaization.","","The origin must be Signed.","","","Parameters:","- `organization_id`: The identifier of the organization. Origin must be member of it.","","Emits `Created` event when successful."]},{"Name":"destroy","TypeFields":[{"Name":"organization_id","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"asset_id","TypeName":"AssetId","TypeId":153}],"Index":1,"Docs":["Destroy a fungible asset.","","The origin must be Signed and must be a member of the organization"]}],"Path":["pallet_fungible_assets","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"149":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":150}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":150}],"TypeDef":"Variant"},"150":{"TypeFields":[{"Name":"speed","TypeName":"FungibleAssetBalance","TypeId":44}],"Path":["pallet_fungible_assets","types","TopUppedFA"],"TypeDef":"Composite"},"151":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":152}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":152}],"TypeDef":"Variant"},"152":{"TypeFields":[{"Name":"amount","TypeName":"FungibleAssetBalance","TypeId":44}],"Path":["pallet_fungible_assets","types","CupFA"],"TypeDef":"Composite"},"153":{"TypeId":43,"TypeDef":"Compact"},"154":{"Variants":[{"Name":"create","TypeFields":[{"Name":"organization_id","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"name","TypeName":"Vec<u8>","TypeId":10}],"Index":0,"Docs":["Issue a new non fungible class.","","This new class has owner as orgaization.","","The origin must be Signed.","","Parameters:","- `organization_id`: The identifier of the organization. Origin must be member of it.","","Emits `Created` event when successful."]},{"Name":"destroy","TypeFields":[{"Name":"organization_id","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":155}],"Index":1,"Docs":["Destroy a non fungible asset class.","","The origin must be Signed and must be a member of the organization"]},{"Name":"create_attribute","TypeFields":[{"Name":"organization_id","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":155},{"Name":"attribute","TypeName":"Attribute","TypeId":145}],"Index":2,"Docs":["Creates an attribute for the non fungible asset class.","The origin must be Signed, be a member of the organization","and that organization must be a owner of the asset class."]},{"Name":"remove_attribute","TypeFields":[{"Name":"organization_id","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":155},{"Name":"attribute_name","TypeName":"AttributeKey","TypeId":48}],"Index":3,"Docs":["Removes an attribute for the non fungible asset class.","The origin must be Signed, be a member of the organization","and that organization must be a owner of the asset class."]},{"Name":"set_characteristic","TypeFields":[{"Name":"organization_id","TypeName":"<T::Lookup as StaticLookup>::Source","TypeId":129},{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":155},{"Name":"characteristic","TypeName":"Characteristic","TypeId":156}],"Index":4}],"Path":["pallet_non_fungible_assets","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"155":{"TypeId":46,"TypeDef":"Compact"},"156":{"Variants":[{"Name":"Bettor","TypeFields":[{"TypeName":"CharacteristicBettor","TypeId":157}],"Index":0},{"Name":"Purchased","TypeFields":[{"TypeName":"CharacteristicPurchased","TypeId":167}],"Index":1}],"Path":["pallet_support","characteristics","Characteristic"],"TypeDef":"Variant"},"157":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":158}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":158}],"TypeDef":"Variant"},"158":{"TypeFields":[{"Name":"outcomes","TypeName":"Outcomes","TypeId":159},{"Name":"winnings","TypeName":"BoundedVec<BettorWinning, DefaultListLengthLimit>","TypeId":163},{"Name":"rounds","TypeName":"RoundsCount","TypeId":4},{"Name":"draw_outcome","TypeName":"DrawOutcomeResult","TypeId":166}],"Path":["pallet_support","characteristics","bettor","Bettor"],"TypeDef":"Composite"},"159":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":162}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":160},{"Name":"S"}],"TypeDef":"Composite"},"160":{"TypeFields":[{"Name":"name","TypeName":"BoundedVec<u8, DefaultStringLimit>","TypeId":52},{"Name":"probability","TypeName":"u32","TypeId":4},{"Name":"result","TypeName":"OutcomeResult","TypeId":161}],"Path":["pallet_support","characteristics","bettor","BettorOutcome"],"TypeDef":"Composite"},"161":{"Variants":[{"Name":"Win","TypeFields":null,"Index":0},{"Name":"Lose","TypeFields":null,"Index":1},{"Name":"Draw","TypeFields":null,"Index":2}],"Path":["pallet_support","characteristics","bettor","OutcomeResult"],"TypeDef":"Variant"},"162":{"TypeId":160,"TypeDef":"Sequence"},"163":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":165}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":164},{"Name":"S"}],"TypeDef":"Composite"},"164":{"Variants":[{"Name":"Fa","TypeFields":[{"TypeName":"FungibleAssetId","TypeId":43},{"TypeName":"FungibleAssetBalance","TypeId":44}],"Index":0},{"Name":"Nfa","TypeFields":[{"TypeName":"NonFungibleClassId","TypeId":46}],"Index":1}],"Path":["pallet_support","characteristics","bettor","BettorWinning"],"TypeDef":"Variant"},"165":{"TypeId":164,"TypeDef":"Sequence"},"166":{"Variants":[{"Name":"Win","TypeFields":null,"Index":0},{"Name":"Lose","TypeFields":null,"Index":1},{"Name":"Keep","TypeFields":null,"Index":2}],"Path":["pallet_support","characteristics","bettor","DrawOutcomeResult"],"TypeDef":"Variant"},"167":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Some","TypeFields":[{"TypeId":168}],"Index":1}],"Path":["Option"],"TypeParams":[{"Name":"T","TypeId":168}],"TypeDef":"Variant"},"168":{"TypeFields":[{"Name":"offers","TypeName":"BoundedVec<Offer, DefaultListLengthLimit>","TypeId":169}],"Path":["pallet_support","characteristics","purchased","Purchased"],"TypeDef":"Composite"},"169":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":171}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":170},{"Name":"S"}],"TypeDef":"Composite"},"170":{"TypeFields":[{"Name":"fa","TypeName":"FungibleAssetId","TypeId":43},{"Name":"price","TypeName":"FungibleAssetBalance","TypeId":44},{"Name":"attributes","TypeName":"AttributeList","TypeId":144}],"Path":["pallet_support","characteristics","purchased","Offer"],"TypeDef":"Composite"},"171":{"TypeId":170,"TypeDef":"Sequence"},"172":{"Variants":[{"Name":"exec_buy_nfa","TypeFields":[{"Name":"organization_id","TypeName":"AccountIdOf<T>","TypeId":0},{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46},{"Name":"offer_id","TypeName":"u32","TypeId":4}],"Index":0,"Docs":["Execute mechanic `Buy NFA`"]},{"Name":"exec_bet","TypeFields":[{"Name":"organization_id","TypeName":"AccountIdOf<T>","TypeId":0},{"Name":"class_id","TypeName":"NonFungibleClassId","TypeId":46},{"Name":"asset_id","TypeName":"NonFungibleAssetId","TypeId":47}],"Index":1,"Docs":["Execute mechanic `Bet`"]},{"Name":"upgrade","TypeFields":[{"Name":"organization_id","TypeName":"AccountIdOf<T>","TypeId":0},{"Name":"upgrage_data","TypeName":"MechanicUpgradeDataOf<T>","TypeId":173}],"Index":2,"Docs":["Upgrade mechanic"]}],"Path":["pallet_mechanics","pallet","Call"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Contains one variant per dispatchable that can be called by an extrinsic."]},"173":{"TypeFields":[{"Name":"mechanic_id","TypeName":"MechanicId<AccountId, Index>","TypeId":174},{"Name":"payload","TypeName":"MechanicUpgradePayload","TypeId":175}],"Path":["pallet_mechanics","types","MechanicUpgradeData"],"TypeParams":[{"Name":"AccountId","TypeId":0},{"Name":"Index","TypeId":4}],"TypeDef":"Composite"},"174":{"TypeFields":[{"Name":"gamer_account","TypeName":"GamerAccount<AccountId>","TypeId":54},{"Name":"nonce","TypeName":"Index","TypeId":4}],"Path":["pallet_support","MechanicId"],"TypeParams":[{"Name":"AccountId","TypeId":0},{"Name":"Index","TypeId":4}],"TypeDef":"Composite"},"175":{"Variants":[{"Name":"Bet","TypeFields":null,"Index":0}],"Path":["pallet_mechanics","types","MechanicUpgradePayload"],"TypeDef":"Variant"},"176":{"Variants":[{"Name":"RequireSudo","TypeFields":null,"Index":0,"Docs":["Sender must be the Sudo account"]}],"Path":["pallet_sudo","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Error for the Sudo pallet"]},"177":{"Variants":[{"Name":"NoneValue","TypeFields":null,"Index":0,"Docs":["Error names should be descriptive."]},{"Name":"StorageOverflow","TypeFields":null,"Index":1,"Docs":["Errors should have helpful documentation associated with them."]}],"Path":["pallet_template","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"]},"178":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":179}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":0},{"Name":"S"}],"TypeDef":"Composite"},"179":{"TypeId":0,"TypeDef":"Sequence"},"180":{"Variants":[{"Name":"RequireRegistrar","TypeFields":null,"Index":0,"Docs":["Sender must be the Registrar account"]},{"Name":"Exhausted","TypeFields":null,"Index":1,"Docs":["Exceeded account limit per slot."]},{"Name":"Registered","TypeFields":null,"Index":2,"Docs":["The account is already registered."]},{"Name":"InvalidSignature","TypeFields":null,"Index":3,"Docs":["The provided signature is invalid."]},{"Name":"UnknownRegistrar","TypeFields":null,"Index":4,"Docs":["Registrar not defined."]}],"Path":["pallet_users","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["Errors of the Users pallet."]},"181":{"TypeFields":[{"Name":"name","TypeName":"BoundedString","TypeId":182},{"Name":"onboarding_assets","TypeName":"OnboardingAssets","TypeId":141}],"Path":["pallet_organization_identity","types","OrganizationDetails"],"TypeParams":[{"Name":"BoundedString","TypeId":182}],"TypeDef":"Composite"},"182":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":10}],"Path":["sp_runtime","bounded","bounded_vec","BoundedVec"],"TypeParams":[{"Name":"T","TypeId":2},{"Name":"S"}],"TypeDef":"Composite"},"183":{"TypeIds":[0,0],"TypeDef":"Tuple"},"184":{"Variants":[{"Name":"NoneValue","TypeFields":null,"Index":0,"Docs":["Error names should be descriptive."]},{"Name":"StorageOverflow","TypeFields":null,"Index":1,"Docs":["Errors should have helpful documentation associated with them."]},{"Name":"OrganizationExists","TypeFields":null,"Index":2,"Docs":["Cannot create the organization because it already exists."]},{"Name":"OrganizationNameTooLong","TypeFields":null,"Index":3,"Docs":["Organization name is too long."]},{"Name":"NotOrganization","TypeFields":null,"Index":4,"Docs":["Account is not an organization"]},{"Name":"AlreadyMember","TypeFields":null,"Index":5,"Docs":["Cannot add a user to an organization to which they already belong."]},{"Name":"MembershipLimitReached","TypeFields":null,"Index":6,"Docs":["Cannot add another member because the limit is already reached."]},{"Name":"InvalidMember","TypeFields":null,"Index":7,"Docs":["Cannot add organization as an organization's member."]},{"Name":"NotMember","TypeFields":null,"Index":8,"Docs":["Member not exits."]},{"Name":"AlreadyOnboarded","TypeFields":null,"Index":9,"Docs":["Account has already been onboarded."]}],"Path":["pallet_organization_identity","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"]},"185":{"TypeFields":[{"Name":"owner","TypeName":"AccountId","TypeId":0},{"Name":"supply","TypeName":"FungibleAssetBalance","TypeId":44},{"Name":"accounts","TypeName":"u32","TypeId":4},{"Name":"references","TypeName":"u32","TypeId":4},{"Name":"name","TypeName":"BoundedString","TypeId":48},{"Name":"top_upped","TypeName":"Option<TopUppedFA>","TypeId":149},{"Name":"cup_global","TypeName":"Option<CupFA>","TypeId":151},{"Name":"cup_local","TypeName":"Option<CupFA>","TypeId":151}],"Path":["pallet_fungible_assets","types","AssetDetails"],"TypeParams":[{"Name":"AccountId","TypeId":0},{"Name":"BoundedString","TypeId":48}],"TypeDef":"Composite"},"186":{"TypeIds":[0,43],"TypeDef":"Tuple"},"187":{"TypeFields":[{"Name":"balance","TypeName":"FungibleAssetBalance","TypeId":44},{"Name":"reason","TypeName":"ExistenceReason","TypeId":188}],"Path":["pallet_fungible_assets","types","AssetAccount"],"TypeDef":"Composite"},"188":{"Variants":[{"Name":"Consumer","TypeFields":null,"Index":0},{"Name":"Sufficient","TypeFields":null,"Index":1},{"Name":"DepositHeld","TypeFields":[{"TypeName":"FungibleAssetBalance","TypeId":44}],"Index":2},{"Name":"DepositRefunded","TypeFields":null,"Index":3}],"Path":["pallet_fungible_assets","types","ExistenceReason"],"TypeDef":"Variant"},"189":{"TypeFields":[{"TypeName":"Vec<T>","TypeId":190}],"Path":["sp_runtime","bounded","weak_bounded_vec","WeakBoundedVec"],"TypeParams":[{"Name":"T","TypeId":43},{"Name":"S"}],"TypeDef":"Composite"},"190":{"TypeId":43,"TypeDef":"Sequence"},"191":{"TypeIds":[43,0],"TypeDef":"Tuple"},"192":{"Variants":[{"Name":"NoneValue","TypeFields":null,"Index":0,"Docs":["Error names should be descriptive."]},{"Name":"StorageOverflow","TypeFields":null,"Index":1,"Docs":["Errors should have helpful documentation associated with them."]},{"Name":"InUse","TypeFields":null,"Index":2,"Docs":["The asset ID is already taken."]},{"Name":"NoAvailableAssetId","TypeFields":null,"Index":3},{"Name":"NoPermission","TypeFields":null,"Index":4,"Docs":["The signing account has no permission to do the operation."]},{"Name":"AssetNameTooLong","TypeFields":null,"Index":5,"Docs":["Asset name is too long."]},{"Name":"MaxTopUppedAssetsReached","TypeFields":null,"Index":6,"Docs":["Limit of tipupped assets is reached."]},{"Name":"ZeroGlobalCup","TypeFields":null,"Index":7,"Docs":["Global Cup must be above zero."]},{"Name":"ZeroLocalCup","TypeFields":null,"Index":8,"Docs":["Local Cup must be above zero."]},{"Name":"ZeroTopUpped","TypeFields":null,"Index":9,"Docs":["Top upped speed must be above zero."]},{"Name":"TopUppedWithNoCup","TypeFields":null,"Index":10,"Docs":["Top upped speed can't be set without a local cup."]},{"Name":"NoAccount","TypeFields":null,"Index":11,"Docs":["The account to alter does not exist."]}],"Path":["pallet_fungible_assets","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"]},"193":{"TypeFields":[{"Name":"owner","TypeName":"AccountId","TypeId":0},{"Name":"instances","TypeName":"u32","TypeId":4},{"Name":"attributes","TypeName":"u32","TypeId":4},{"Name":"name","TypeName":"BoundedVec<u8, DefaultStringLimit>","TypeId":52},{"Name":"bettor","TypeName":"Option<Bettor>","TypeId":157},{"Name":"purchased","TypeName":"Option<Purchased>","TypeId":167}],"Path":["pallet_support","types_nfa","ClassDetails"],"TypeParams":[{"Name":"AccountId","TypeId":0}],"TypeDef":"Composite"},"194":{"TypeIds":[0,46],"TypeDef":"Tuple"},"195":{"TypeIds":[0,46,47],"TypeDef":"Tuple"},"196":{"TypeIds":[46,47],"TypeDef":"Tuple"},"197":{"TypeFields":[{"Name":"owner","TypeName":"AccountId","TypeId":0},{"Name":"locked","TypeName":"Locker<AccountId, Index>","TypeId":198}],"Path":["pallet_support","types_nfa","AssetDetails"],"TypeParams":[{"Name":"AccountId","TypeId":0},{"Name":"Index","TypeId":4}],"TypeDef":"Composite"},"198":{"Variants":[{"Name":"None","TypeFields":null,"Index":0},{"Name":"Mechanic","TypeFields":[{"TypeName":"MechanicId<AccountId, Index>","TypeId":174}],"Index":1}],"Path":["pallet_support","Locker"],"TypeParams":[{"Name":"AccountId","TypeId":0},{"Name":"Index","TypeId":4}],"TypeDef":"Variant"},"199":{"TypeIds":[47,48],"TypeDef":"Tuple"},"200":{"TypeIds":[46,48],"TypeDef":"Tuple"},"201":{"Variants":[{"Name":"NoneValue","TypeFields":null,"Index":0,"Docs":["Error names should be descriptive."]},{"Name":"StorageOverflow","TypeFields":null,"Index":1,"Docs":["Errors should have helpful documentation associated with them."]},{"Name":"NoAvailableAssetId","TypeFields":null,"Index":2},{"Name":"NoAvailableClassId","TypeFields":null,"Index":3},{"Name":"ClassNameTooLong","TypeFields":null,"Index":4,"Docs":["Class name is too long."]},{"Name":"NoPermission","TypeFields":null,"Index":5,"Docs":["The signing account has no permission to do the operation."]},{"Name":"UnknownClass","TypeFields":null,"Index":6,"Docs":["The given class Id is unknown."]},{"Name":"UnknownAsset","TypeFields":null,"Index":7,"Docs":["The given asset Id is unknown."]},{"Name":"WrongBettor","TypeFields":null,"Index":8,"Docs":["The bettor characteristic is wrong."]},{"Name":"WrongPurchased","TypeFields":null,"Index":9,"Docs":["The purchased characteristic is wrong."]},{"Name":"AttributeConversionError","TypeFields":null,"Index":10,"Docs":["Attribute value not supported"]},{"Name":"NumberAttributeValueExceedsMaximum","TypeFields":null,"Index":11,"Docs":["Attribute numeric value exceeds maximum value"]},{"Name":"StringAttributeLengthLimitExceeded","TypeFields":null,"Index":12,"Docs":["String attribute length limit exceeded"]},{"Name":"AttributeAlreadyExists","TypeFields":null,"Index":13,"Docs":["An attribute with the specified name already exists"]},{"Name":"WrongParameter","TypeFields":null,"Index":14,"Docs":["General error if any parameter is invalid"]},{"Name":"UnsupportedCharacteristic","TypeFields":null,"Index":15,"Docs":["This characteristic is not supported by this asset"]},{"Name":"WrongCharacteristic","TypeFields":null,"Index":16,"Docs":["Characteristic is invalid"]},{"Name":"Locked","TypeFields":null,"Index":17,"Docs":["The asset instance is locked"]},{"Name":"CommonError","TypeFields":[{"TypeName":"CommonError","TypeId":202}],"Index":18,"Docs":["The common error"]}],"Path":["pallet_non_fungible_assets","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"]},"202":{"Variants":[{"Name":"WrongCharacteristic","TypeFields":null,"Index":0},{"Name":"WrongBettor","TypeFields":null,"Index":1},{"Name":"WrongPurchased","TypeFields":null,"Index":2}],"Path":["pallet_support","errors","CommonError"],"TypeDef":"Variant"},"203":{"TypeIds":[54,4],"TypeDef":"Tuple"},"204":{"TypeIds":[4,54,4],"TypeDef":"Tuple"},"205":{"Variants":[{"Name":"MechanicsNotAvailable","TypeFields":null,"Index":0,"Docs":["Mechanics are not available for this asset or this origin"]},{"Name":"Internal","TypeFields":null,"Index":1,"Docs":["Internal error"]},{"Name":"AssetsExceedsAllowable","TypeFields":null,"Index":2,"Docs":["The number of assets exceeds the allowable"]},{"Name":"IncompatibleAsset","TypeFields":null,"Index":3,"Docs":["Asset is incompatible with mechanic"]},{"Name":"IncompatibleData","TypeFields":null,"Index":4,"Docs":["Given data is incompatible with mechanic"]},{"Name":"NoPermission","TypeFields":null,"Index":5,"Docs":["The signing account has no permission to do the operation."]}],"Path":["pallet_mechanics","pallet","Error"],"TypeParams":[{"Name":"T"}],"TypeDef":"Variant","Docs":["\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"]},"206":{"TypeFields":[{"TypeId":10}],"Path":["sp_runtime","generic","unchecked_extrinsic","UncheckedExtrinsic"],"TypeParams":[{"Name":"Address","TypeId":129},{"Name":"Call","TypeId":137},{"Name":"Signature","TypeId":207},{"Name":"Extra","TypeId":211}],"TypeDef":"Composite"},"207":{"Variants":[{"Name":"Ed25519","TypeFields":[{"TypeName":"ed25519::Signature","TypeId":112}],"Index":0},{"Name":"Sr25519","TypeFields":[{"TypeName":"sr25519::Signature","TypeId":208}],"Index":1},{"Name":"Ecdsa","TypeFields":[{"TypeName":"ecdsa::Signature","TypeId":209}],"Index":2}],"Path":["sp_runtime","MultiSignature"],"TypeDef":"Variant"},"208":{"TypeFields":[{"TypeName":"[u8; 64]","TypeId":113}],"Path":["sp_core","sr25519","Signature"],"TypeDef":"Composite"},"209":{"TypeFields":[{"TypeName":"[u8; 65]","TypeId":210}],"Path":["sp_core","ecdsa","Signature"],"TypeDef":"Composite"},"210":{"Length":65,"TypeId":2,"TypeDef":"Array"},"211":{"TypeIds":[212,213,214,215,216,218,219,220],"TypeDef":"Tuple"},"212":{"Path":["frame_system","extensions","check_non_zero_sender","CheckNonZeroSender"],"TypeParams":[{"Name":"T"}],"TypeDef":"Composite"},"213":{"Path":["frame_system","extensions","check_spec_version","CheckSpecVersion"],"TypeParams":[{"Name":"T"}],"TypeDef":"Composite"},"214":{"Path":["frame_system","extensions","check_tx_version","CheckTxVersion"],"TypeParams":[{"Name":"T"}],"TypeDef":"Composite"},"215":{"Path":["frame_system","extensions","check_genesis","CheckGenesis"],"TypeParams":[{"Name":"T"}],"TypeDef":"Composite"},"216":{"TypeFields":[{"TypeName":"Era","TypeId":217}],"Path":["frame_system","extensions","check_mortality","CheckMortality"],"TypeParams":[{"Name":"T"}],"TypeDef":"Composite"},"217":{"Variants":[{"Name":"Immortal","TypeFields":null,"Index":0},{"Name":"Mortal1","TypeFields":[{"TypeId":2}],"Index":1},{"Name":"Mortal2","TypeFields":[{"TypeId":2}],"Index":2},{"Name":"Mortal3","TypeFields":[{"TypeId":2}],"Index":3},{"Name":"Mortal4","TypeFields":[{"TypeId":2}],"Index":4},{"Name":"Mortal5","TypeFields":[{"TypeId":2}],"Index":5},{"Name":"Mortal6","TypeFields":[{"TypeId":2}],"Index":6},{"Name":"Mortal7","TypeFields":[{"TypeId":2}],"Index":7},{"Name":"Mortal8","TypeFields":[{"TypeId":2}],"Index":8},{"Name":"Mortal9","TypeFields":[{"TypeId":2}],"Index":9},{"Name":"Mortal10","TypeFields":[{"TypeId":2}],"Index":10},{"Name":"Mortal11","TypeFields":[{"TypeId":2}],"Index":11},{"Name":"Mortal12","TypeFields":[{"TypeId":2}],"Index":12},{"Name":"Mortal13","TypeFields":[{"TypeId":2}],"Index":13},{"Name":"Mortal14","TypeFields":[{"TypeId":2}],"Index":14},{"Name":"Mortal15","TypeFields":[{"TypeId":2}],"Index":15},{"Name":"Mortal16","TypeFields":[{"TypeId":2}],"Index":16},{"Name":"Mortal17","TypeFields":[{"TypeId":2}],"Index":17},{"Name":"Mortal18","TypeFields":[{"TypeId":2}],"Index":18},{"Name":"Mortal19","TypeFields":[{"TypeId":2}],"Index":19},{"Name":"Mortal20","TypeFields":[{"TypeId":2}],"Index":20},{"Name":"Mortal21","TypeFields":[{"TypeId":2}],"Index":21},{"Name":"Mortal22","TypeFields":[{"TypeId":2}],"Index":22},{"Name":"Mortal23","TypeFields":[{"TypeId":2}],"Index":23},{"Name":"Mortal24","TypeFields":[{"TypeId":2}],"Index":24},{"Name":"Mortal25","TypeFields":[{"TypeId":2}],"Index":25},{"Name":"Mortal26","TypeFields":[{"TypeId":2}],"Index":26},{"Name":"Mortal27","TypeFields":[{"TypeId":2}],"Index":27},{"Name":"Mortal28","TypeFields":[{"TypeId":2}],"Index":28},{"Name":"Mortal29","TypeFields":[{"TypeId":2}],"Index":29},{"Name":"Mortal30","TypeFields":[{"TypeId":2}],"Index":30},{"Name":"Mortal31","TypeFields":[{"TypeId":2}],"Index":31},{"Name":"Mortal32","TypeFields":[{"TypeId":2}],"Index":32},{"Name":"Mortal33","TypeFields":[{"TypeId":2}],"Index":33},{"Name":"Mortal34","TypeFields":[{"TypeId":2}],"Index":34},{"Name":"Mortal35","TypeFields":[{"TypeId":2}],"Index":35},{"Name":"Mortal36","TypeFields":[{"TypeId":2}],"Index":36},{"Name":"Mortal37","TypeFields":[{"TypeId":2}],"Index":37},{"Name":"Mortal38","TypeFields":[{"TypeId":2}],"Index":38},{"Name":"Mortal39","TypeFields":[{"TypeId":2}],"Index":39},{"Name":"Mortal40","TypeFields":[{"TypeId":2}],"Index":40},{"Name":"Mortal41","TypeFields":[{"TypeId":2}],"Index":41},{"Name":"Mortal42","TypeFields":[{"TypeId":2}],"Index":42},{"Name":"Mortal43","TypeFields":[{"TypeId":2}],"Index":43},{"Name":"Mortal44","TypeFields":[{"TypeId":2}],"Index":44},{"Name":"Mortal45","TypeFields":[{"TypeId":2}],"Index":45},{"Name":"Mortal46","TypeFields":[{"TypeId":2}],"Index":46},{"Name":"Mortal47","TypeFields":[{"TypeId":2}],"Index":47},{"Name":"Mortal48","TypeFields":[{"TypeId":2}],"Index":48},{"Name":"Mortal49","TypeFields":[{"TypeId":2}],"Index":49},{"Name":"Mortal50","TypeFields":[{"TypeId":2}],"Index":50},{"Name":"Mortal51","TypeFields":[{"TypeId":2}],"Index":51},{"Name":"Mortal52","TypeFields":[{"TypeId":2}],"Index":52},{"Name":"Mortal53","TypeFields":[{"TypeId":2}],"Index":53},{"Name":"Mortal54","TypeFields":[{"TypeId":2}],"Index":54},{"Name":"Mortal55","TypeFields":[{"TypeId":2}],"Index":55},{"Name":"Mortal56","TypeFields":[{"TypeId":2}],"Index":56},{"Name":"Mortal57","TypeFields":[{"TypeId":2}],"Index":57},{"Name":"Mortal58","TypeFields":[{"TypeId":2}],"Index":58},{"Name":"Mortal59","TypeFields":[{"TypeId":2}],"Index":59},{"Name":"Mortal60","TypeFields":[{"TypeId":2}],"Index":60},{"Name":"Mortal61","TypeFields":[{"TypeId":2}],"Index":61},{"Name":"Mortal62","TypeFields":[{"TypeId":2}],"Index":62},{"Name":"Mortal63","TypeFields":[{"TypeId":2}],"Index":63},{"Name":"Mortal64","TypeFields":[{"TypeId":2}],"Index":64},{"Name":"Mortal65","TypeFields":[{"TypeId":2}],"Index":65},{"Name":"Mortal66","TypeFields":[{"TypeId":2}],"Index":66},{"Name":"Mortal67","TypeFields":[{"TypeId":2}],"Index":67},{"Name":"Mortal68","TypeFields":[{"TypeId":2}],"Index":68},{"Name":"Mortal69","TypeFields":[{"TypeId":2}],"Index":69},{"Name":"Mortal70","TypeFields":[{"TypeId":2}],"Index":70},{"Name":"Mortal71","TypeFields":[{"TypeId":2}],"Index":71},{"Name":"Mortal72","TypeFields":[{"TypeId":2}],"Index":72},{"Name":"Mortal73","TypeFields":[{"TypeId":2}],"Index":73},{"Name":"Mortal74","TypeFields":[{"TypeId":2}],"Index":74},{"Name":"Mortal75","TypeFields":[{"TypeId":2}],"Index":75},{"Name":"Mortal76","TypeFields":[{"TypeId":2}],"Index":76},{"Name":"Mortal77","TypeFields":[{"TypeId":2}],"Index":77},{"Name":"Mortal78","TypeFields":[{"TypeId":2}],"Index":78},{"Name":"Mortal79","TypeFields":[{"TypeId":2}],"Index":79},{"Name":"Mortal80","TypeFields":[{"TypeId":2}],"Index":80},{"Name":"Mortal81","TypeFields":[{"TypeId":2}],"Index":81},{"Name":"Mortal82","TypeFields":[{"TypeId":2}],"Index":82},{"Name":"Mortal83","TypeFields":[{"TypeId":2}],"Index":83},{"Name":"Mortal84","TypeFields":[{"TypeId":2}],"Index":84},{"Name":"Mortal85","TypeFields":[{"TypeId":2}],"Index":85},{"Name":"Mortal86","TypeFields":[{"TypeId":2}],"Index":86},{"Name":"Mortal87","TypeFields":[{"TypeId":2}],"Index":87},{"Name":"Mortal88","TypeFields":[{"TypeId":2}],"Index":88},{"Name":"Mortal89","TypeFields":[{"TypeId":2}],"Index":89},{"Name":"Mortal90","TypeFields":[{"TypeId":2}],"Index":90},{"Name":"Mortal91","TypeFields":[{"TypeId":2}],"Index":91},{"Name":"Mortal92","TypeFields":[{"TypeId":2}],"Index":92},{"Name":"Mortal93","TypeFields":[{"TypeId":2}],"Index":93},{"Name":"Mortal94","TypeFields":[{"TypeId":2}],"Index":94},{"Name":"Mortal95","TypeFields":[{"TypeId":2}],"Index":95},{"Name":"Mortal96","TypeFields":[{"TypeId":2}],"Index":96},{"Name":"Mortal97","TypeFields":[{"TypeId":2}],"Index":97},{"Name":"Mortal98","TypeFields":[{"TypeId":2}],"Index":98},{"Name":"Mortal99","TypeFields":[{"TypeId":2}],"Index":99},{"Name":"Mortal100","TypeFields":[{"TypeId":2}],"Index":100},{"Name":"Mortal101","TypeFields":[{"TypeId":2}],"Index":101},{"Name":"Mortal102","TypeFields":[{"TypeId":2}],"Index":102},{"Name":"Mortal103","TypeFields":[{"TypeId":2}],"Index":103},{"Name":"Mortal104","TypeFields":[{"TypeId":2}],"Index":104},{"Name":"Mortal105","TypeFields":[{"TypeId":2}],"Index":105},{"Name":"Mortal106","TypeFields":[{"TypeId":2}],"Index":106},{"Name":"Mortal107","TypeFields":[{"TypeId":2}],"Index":107},{"Name":"Mortal108","TypeFields":[{"TypeId":2}],"Index":108},{"Name":"Mortal109","TypeFields":[{"TypeId":2}],"Index":109},{"Name":"Mortal110","TypeFields":[{"TypeId":2}],"Index":110},{"Name":"Mortal111","TypeFields":[{"TypeId":2}],"Index":111},{"Name":"Mortal112","TypeFields":[{"TypeId":2}],"Index":112},{"Name":"Mortal113","TypeFields":[{"TypeId":2}],"Index":113},{"Name":"Mortal114","TypeFields":[{"TypeId":2}],"Index":114},{"Name":"Mortal115","TypeFields":[{"TypeId":2}],"Index":115},{"Name":"Mortal116","TypeFields":[{"TypeId":2}],"Index":116},{"Name":"Mortal117","TypeFields":[{"TypeId":2}],"Index":117},{"Name":"Mortal118","TypeFields":[{"TypeId":2}],"Index":118},{"Name":"Mortal119","TypeFields":[{"TypeId":2}],"Index":119},{"Name":"Mortal120","TypeFields":[{"TypeId":2}],"Index":120},{"Name":"Mortal121","TypeFields":[{"TypeId":2}],"Index":121},{"Name":"Mortal122","TypeFields":[{"TypeId":2}],"Index":122},{"Name":"Mortal123","TypeFields":[{"TypeId":2}],"Index":123},{"Name":"Mortal124","TypeFields":[{"TypeId":2}],"Index":124},{"Name":"Mortal125","TypeFields":[{"TypeId":2}],"Index":125},{"Name":"Mortal126","TypeFields":[{"TypeId":2}],"Index":126},{"Name":"Mortal127","TypeFields":[{"TypeId":2}],"Index":127},{"Name":"Mortal128","TypeFields":[{"TypeId":2}],"Index":128},{"Name":"Mortal129","TypeFields":[{"TypeId":2}],"Index":129},{"Name":"Mortal130","TypeFields":[{"TypeId":2}],"Index":130},{"Name":"Mortal131","TypeFields":[{"TypeId":2}],"Index":131},{"Name":"Mortal132","TypeFields":[{"TypeId":2}],"Index":132},{"Name":"Mortal133","TypeFields":[{"TypeId":2}],"Index":133},{"Name":"Mortal134","TypeFields":[{"TypeId":2}],"Index":134},{"Name":"Mortal135","TypeFields":[{"TypeId":2}],"Index":135},{"Name":"Mortal136","TypeFields":[{"TypeId":2}],"Index":136},{"Name":"Mortal137","TypeFields":[{"TypeId":2}],"Index":137},{"Name":"Mortal138","TypeFields":[{"TypeId":2}],"Index":138},{"Name":"Mortal139","TypeFields":[{"TypeId":2}],"Index":139},{"Name":"Mortal140","TypeFields":[{"TypeId":2}],"Index":140},{"Name":"Mortal141","TypeFields":[{"TypeId":2}],"Index":141},{"Name":"Mortal142","TypeFields":[{"TypeId":2}],"Index":142},{"Name":"Mortal143","TypeFields":[{"TypeId":2}],"Index":143},{"Name":"Mortal144","TypeFields":[{"TypeId":2}],"Index":144},{"Name":"Mortal145","TypeFields":[{"TypeId":2}],"Index":145},{"Name":"Mortal146","TypeFields":[{"TypeId":2}],"Index":146},{"Name":"Mortal147","TypeFields":[{"TypeId":2}],"Index":147},{"Name":"Mortal148","TypeFields":[{"TypeId":2}],"Index":148},{"Name":"Mortal149","TypeFields":[{"TypeId":2}],"Index":149},{"Name":"Mortal150","TypeFields":[{"TypeId":2}],"Index":150},{"Name":"Mortal151","TypeFields":[{"TypeId":2}],"Index":151},{"Name":"Mortal152","TypeFields":[{"TypeId":2}],"Index":152},{"Name":"Mortal153","TypeFields":[{"TypeId":2}],"Index":153},{"Name":"Mortal154","TypeFields":[{"TypeId":2}],"Index":154},{"Name":"Mortal155","TypeFields":[{"TypeId":2}],"Index":155},{"Name":"Mortal156","TypeFields":[{"TypeId":2}],"Index":156},{"Name":"Mortal157","TypeFields":[{"TypeId":2}],"Index":157},{"Name":"Mortal158","TypeFields":[{"TypeId":2}],"Index":158},{"Name":"Mortal159","TypeFields":[{"TypeId":2}],"Index":159},{"Name":"Mortal160","TypeFields":[{"TypeId":2}],"Index":160},{"Name":"Mortal161","TypeFields":[{"TypeId":2}],"Index":161},{"Name":"Mortal162","TypeFields":[{"TypeId":2}],"Index":162},{"Name":"Mortal163","TypeFields":[{"TypeId":2}],"Index":163},{"Name":"Mortal164","TypeFields":[{"TypeId":2}],"Index":164},{"Name":"Mortal165","TypeFields":[{"TypeId":2}],"Index":165},{"Name":"Mortal166","TypeFields":[{"TypeId":2}],"Index":166},{"Name":"Mortal167","TypeFields":[{"TypeId":2}],"Index":167},{"Name":"Mortal168","TypeFields":[{"TypeId":2}],"Index":168},{"Name":"Mortal169","TypeFields":[{"TypeId":2}],"Index":169},{"Name":"Mortal170","TypeFields":[{"TypeId":2}],"Index":170},{"Name":"Mortal171","TypeFields":[{"TypeId":2}],"Index":171},{"Name":"Mortal172","TypeFields":[{"TypeId":2}],"Index":172},{"Name":"Mortal173","TypeFields":[{"TypeId":2}],"Index":173},{"Name":"Mortal174","TypeFields":[{"TypeId":2}],"Index":174},{"Name":"Mortal175","TypeFields":[{"TypeId":2}],"Index":175},{"Name":"Mortal176","TypeFields":[{"TypeId":2}],"Index":176},{"Name":"Mortal177","TypeFields":[{"TypeId":2}],"Index":177},{"Name":"Mortal178","TypeFields":[{"TypeId":2}],"Index":178},{"Name":"Mortal179","TypeFields":[{"TypeId":2}],"Index":179},{"Name":"Mortal180","TypeFields":[{"TypeId":2}],"Index":180},{"Name":"Mortal181","TypeFields":[{"TypeId":2}],"Index":181},{"Name":"Mortal182","TypeFields":[{"TypeId":2}],"Index":182},{"Name":"Mortal183","TypeFields":[{"TypeId":2}],"Index":183},{"Name":"Mortal184","TypeFields":[{"TypeId":2}],"Index":184},{"Name":"Mortal185","TypeFields":[{"TypeId":2}],"Index":185},{"Name":"Mortal186","TypeFields":[{"TypeId":2}],"Index":186},{"Name":"Mortal187","TypeFields":[{"TypeId":2}],"Index":187},{"Name":"Mortal188","TypeFields":[{"TypeId":2}],"Index":188},{"Name":"Mortal189","TypeFields":[{"TypeId":2}],"Index":189},{"Name":"Mortal190","TypeFields":[{"TypeId":2}],"Index":190},{"Name":"Mortal191","TypeFields":[{"TypeId":2}],"Index":191},{"Name":"Mortal192","TypeFields":[{"TypeId":2}],"Index":192},{"Name":"Mortal193","TypeFields":[{"TypeId":2}],"Index":193},{"Name":"Mortal194","TypeFields":[{"TypeId":2}],"Index":194},{"Name":"Mortal195","TypeFields":[{"TypeId":2}],"Index":195},{"Name":"Mortal196","TypeFields":[{"TypeId":2}],"Index":196},{"Name":"Mortal197","TypeFields":[{"TypeId":2}],"Index":197},{"Name":"Mortal198","TypeFields":[{"TypeId":2}],"Index":198},{"Name":"Mortal199","TypeFields":[{"TypeId":2}],"Index":199},{"Name":"Mortal200","TypeFields":[{"TypeId":2}],"Index":200},{"Name":"Mortal201","TypeFields":[{"TypeId":2}],"Index":201},{"Name":"Mortal202","TypeFields":[{"TypeId":2}],"Index":202},{"Name":"Mortal203","TypeFields":[{"TypeId":2}],"Index":203},{"Name":"Mortal204","TypeFields":[{"TypeId":2}],"Index":204},{"Name":"Mortal205","TypeFields":[{"TypeId":2}],"Index":205},{"Name":"Mortal206","TypeFields":[{"TypeId":2}],"Index":206},{"Name":"Mortal207","TypeFields":[{"TypeId":2}],"Index":207},{"Name":"Mortal208","TypeFields":[{"TypeId":2}],"Index":208},{"Name":"Mortal209","TypeFields":[{"TypeId":2}],"Index":209},{"Name":"Mortal210","TypeFields":[{"TypeId":2}],"Index":210},{"Name":"Mortal211","TypeFields":[{"TypeId":2}],"Index":211},{"Name":"Mortal212","TypeFields":[{"TypeId":2}],"Index":212},{"Name":"Mortal213","TypeFields":[{"TypeId":2}],"Index":213},{"Name":"Mortal214","TypeFields":[{"TypeId":2}],"Index":214},{"Name":"Mortal215","TypeFields":[{"TypeId":2}],"Index":215},{"Name":"Mortal216","TypeFields":[{"TypeId":2}],"Index":216},{"Name":"Mortal217","TypeFields":[{"TypeId":2}],"Index":217},{"Name":"Mortal218","TypeFields":[{"TypeId":2}],"Index":218},{"Name":"Mortal219","TypeFields":[{"TypeId":2}],"Index":219},{"Name":"Mortal220","TypeFields":[{"TypeId":2}],"Index":220},{"Name":"Mortal221","TypeFields":[{"TypeId":2}],"Index":221},{"Name":"Mortal222","TypeFields":[{"TypeId":2}],"Index":222},{"Name":"Mortal223","TypeFields":[{"TypeId":2}],"Index":223},{"Name":"Mortal224","TypeFields":[{"TypeId":2}],"Index":224},{"Name":"Mortal225","TypeFields":[{"TypeId":2}],"Index":225},{"Name":"Mortal226","TypeFields":[{"TypeId":2}],"Index":226},{"Name":"Mortal227","TypeFields":[{"TypeId":2}],"Index":227},{"Name":"Mortal228","TypeFields":[{"TypeId":2}],"Index":228},{"Name":"Mortal229","TypeFields":[{"TypeId":2}],"Index":229},{"Name":"Mortal230","TypeFields":[{"TypeId":2}],"Index":230},{"Name":"Mortal231","TypeFields":[{"TypeId":2}],"Index":231},{"Name":"Mortal232","TypeFields":[{"TypeId":2}],"Index":232},{"Name":"Mortal233","TypeFields":[{"TypeId":2}],"Index":233},{"Name":"Mortal234","TypeFields":[{"TypeId":2}],"Index":234},{"Name":"Mortal235","TypeFields":[{"TypeId":2}],"Index":235},{"Name":"Mortal236","TypeFields":[{"TypeId":2}],"Index":236},{"Name":"Mortal237","TypeFields":[{"TypeId":2}],"Index":237},{"Name":"Mortal238","TypeFields":[{"TypeId":2}],"Index":238},{"Name":"Mortal239","TypeFields":[{"TypeId":2}],"Index":239},{"Name":"Mortal240","TypeFields":[{"TypeId":2}],"Index":240},{"Name":"Mortal241","TypeFields":[{"TypeId":2}],"Index":241},{"Name":"Mortal242","TypeFields":[{"TypeId":2}],"Index":242},{"Name":"Mortal243","TypeFields":[{"TypeId":2}],"Index":243},{"Name":"Mortal244","TypeFields":[{"TypeId":2}],"Index":244},{"Name":"Mortal245","TypeFields":[{"TypeId":2}],"Index":245},{"Name":"Mortal246","TypeFields":[{"TypeId":2}],"Index":246},{"Name":"Mortal247","TypeFields":[{"TypeId":2}],"Index":247},{"Name":"Mortal248","TypeFields":[{"TypeId":2}],"Index":248},{"Name":"Mortal249","TypeFields":[{"TypeId":2}],"Index":249},{"Name":"Mortal250","TypeFields":[{"TypeId":2}],"Index":250},{"Name":"Mortal251","TypeFields":[{"TypeId":2}],"Index":251},{"Name":"Mortal252","TypeFields":[{"TypeId":2}],"Index":252},{"Name":"Mortal253","TypeFields":[{"TypeId":2}],"Index":253},{"Name":"Mortal254","TypeFields":[{"TypeId":2}],"Index":254},{"Name":"Mortal255","TypeFields":[{"TypeId":2}],"Index":255}],"Path":["sp_runtime","generic","era","Era"],"TypeDef":"Variant"},"218":{"TypeFields":[{"TypeName":"T::Index","TypeId":73}],"Path":["frame_system","extensions","check_nonce","CheckNonce"],"TypeParams":[{"Name":"T"}],"TypeDef":"Composite"},"219":{"Path":["frame_system","extensions","check_weight","CheckWeight"],"TypeParams":[{"Name":"T"}],"TypeDef":"Composite"},"220":{"TypeFields":[{"TypeName":"BalanceOf<T>","TypeId":132}],"Path":["pallet_transaction_payment","ChargeTransactionPayment"],"TypeParams":[{"Name":"T"}],"TypeDef":"Composite"},"221":{"Path":["finalbiome_node_runtime","Runtime"],"TypeDef":"Composite"}},"Modules":{"0":{"Name":"System","Storage":{"Prefix":"System","Entries":[{"Name":"Account","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":0,"Value":3}},"Default":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=","Docs":[" The full account information for a particular account ID."]},{"Name":"ExtrinsicCount","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":4,"Item2":null},"Default":"AA==","Docs":[" Total extrinsics count for the current block."]},{"Name":"BlockWeight","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":7,"Item2":null},"Default":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","Docs":[" The current weight for the block."]},{"Name":"AllExtrinsicsLen","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":4,"Item2":null},"Default":"AA==","Docs":[" Total length (in bytes) for all extrinsics put together, for the current block."]},{"Name":"BlockHash","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["Twox64Concat"],"Key":4,"Value":9}},"Default":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=","Docs":[" Map of block numbers to block hashes."]},{"Name":"ExtrinsicData","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["Twox64Concat"],"Key":4,"Value":10}},"Default":"AA==","Docs":[" Extrinsics data for the current block (maps an extrinsic's index to its data)."]},{"Name":"Number","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":4,"Item2":null},"Default":"AAAAAA==","Docs":[" The current block number being processed. Set by `execute_block`."]},{"Name":"ParentHash","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":9,"Item2":null},"Default":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=","Docs":[" Hash of the previous block."]},{"Name":"Digest","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":11,"Item2":null},"Default":"AA==","Docs":[" Digest of the current block, also part of the block header."]},{"Name":"Events","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":15,"Item2":null},"Default":"AA==","Docs":[" Events deposited for the current block.",""," NOTE: The item is unbound and should therefore never be read on chain."," It could otherwise inflate the PoV size of a block.",""," Events have a large in-memory size. Box the events to not go out-of-memory"," just in case someone still reads them from within the runtime."]},{"Name":"EventCount","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":4,"Item2":null},"Default":"AAAAAA==","Docs":[" The number of events in the `Events<T>` list."]},{"Name":"EventTopics","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":9,"Value":70}},"Default":"AA==","Docs":[" Mapping between a topic (represented by T::Hash) and a vector of indexes"," of events in the `<Events<T>>` list.",""," All topic vectors have deterministic storage locations depending on the topic. This"," allows light-clients to leverage the changes trie storage tracking mechanism and"," in case of changes fetch the list of events of interest.",""," The value has the type `(T::BlockNumber, EventIndex)` because if we used only just"," the `EventIndex` then in case if the topic has the same contents on the next block"," no notification will be triggered thus the event might be lost."]},{"Name":"LastRuntimeUpgrade","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":72,"Item2":null},"Default":"AA==","Docs":[" Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."]},{"Name":"UpgradedToU32RefCount","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":75,"Item2":null},"Default":"AA==","Docs":[" True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."]},{"Name":"UpgradedToTripleRefCount","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":75,"Item2":null},"Default":"AA==","Docs":[" True if we have upgraded so that AccountInfo contains three types of `RefCount`. False"," (default) if not."]},{"Name":"ExecutionPhase","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":68,"Item2":null},"Default":"AA==","Docs":[" The execution phase of the block."]}]},"Calls":{"TypeId":76},"Events":{"TypeId":18},"Constants":[{"Name":"BlockWeights","TypeId":81,"Value":"4NGpPgEAAAAAIEqp0QEAAJDNJAUAAAAAAXD65KguAQAAAQCY9z5dAQAAAQAAAAAAAAAAkM0kBQAAAAABcII3E6MBAAABACBKqdEBAAABAIhSanQAAACQzSQFAAAAAAAAAA==","Docs":[" Block & extrinsics weights: base values and limits."]},{"Name":"BlockLength","TypeId":85,"Value":"AAA8AAAAUAAAAFAA","Docs":[" The maximum length of a block (in bytes)."]},{"Name":"BlockHashCount","TypeId":4,"Value":"YAkAAA==","Docs":[" Maximum number of block number to block hash mappings to keep (oldest pruned first)."]},{"Name":"DbWeight","TypeId":87,"Value":"QHh9AQAAAAAA4fUFAAAAAA==","Docs":[" The weight of runtime database operations the runtime can invoke."]},{"Name":"Version","TypeId":88,"Value":"PGZpbmFsYmlvbWUtbm9kZTxmaW5hbGJpb21lLW5vZGUBAAAAZAAAAAEAAAAs32rLaJkHYJsEAAAAN+OX/HyR9eQBAAAAQP461AH4lZoGAAAA0ryYl+7QjxUDAAAA94sni+U/RUwCAAAA3XGNXMUyYtQBAAAAqzwFcikf64sBAAAA7ZnFrLJe7fUDAAAAvJ2JkE9bkj8BAAAAN8i7E1CpoqgBAAAA8/8U1atScFkBAAAAAQAAAAE=","Docs":[" Get the chain's current version."]},{"Name":"SS58Prefix","TypeId":93,"Value":"KgA=","Docs":[" The designated SS85 prefix of this chain.",""," This replaces the \"ss58Format\" property declared in the chain spec. Reason is"," that the runtime should know about the prefix in order to make use of it as"," an identifier of the chain."]}],"Errors":{"TypeId":94},"Index":0},"1":{"Name":"RandomnessCollectiveFlip","Storage":{"Prefix":"RandomnessCollectiveFlip","Entries":[{"Name":"RandomMaterial","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":95,"Item2":null},"Default":"AA==","Docs":[" Series of block headers from the last 81 blocks that acts as random seed material. This"," is arranged as a ring buffer with `block_number % 81` being the index into the `Vec` of"," the oldest hash."]}]},"Calls":null,"Events":null,"Constants":[],"Errors":null,"Index":1},"2":{"Name":"Timestamp","Storage":{"Prefix":"Timestamp","Entries":[{"Name":"Now","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":8,"Item2":null},"Default":"AAAAAAAAAAA=","Docs":[" Current time for the current block."]},{"Name":"DidUpdate","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":75,"Item2":null},"Default":"AA==","Docs":[" Did the timestamp get updated in this block?"]}]},"Calls":{"TypeId":96},"Events":null,"Constants":[{"Name":"MinimumPeriod","TypeId":8,"Value":"9AEAAAAAAAA=","Docs":[" The minimum period between blocks. Beware that this is different to the *expected*"," period that the block production apparatus provides. Your chosen consensus system will"," generally work with this to determine a sensible block time. e.g. For Aura, it will be"," double this period on default settings."]}],"Errors":null,"Index":2},"3":{"Name":"Aura","Storage":{"Prefix":"Aura","Entries":[{"Name":"Authorities","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":98,"Item2":null},"Default":"AA==","Docs":[" The current authority set."]},{"Name":"CurrentSlot","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":102,"Item2":null},"Default":"AAAAAAAAAAA=","Docs":[" The current slot of this block.",""," This will be set in `on_initialize`."]}]},"Calls":null,"Events":null,"Constants":[],"Errors":null,"Index":3},"4":{"Name":"Grandpa","Storage":{"Prefix":"Grandpa","Entries":[{"Name":"State","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":103,"Item2":null},"Default":"AA==","Docs":[" State of the current authority set."]},{"Name":"PendingChange","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":104,"Item2":null},"Default":"AA==","Docs":[" Pending change: (signaled at, scheduled change)."]},{"Name":"NextForced","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":4,"Item2":null},"Default":"AA==","Docs":[" next block number where we can force a change."]},{"Name":"Stalled","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":71,"Item2":null},"Default":"AA==","Docs":[" `true` if we are currently stalled."]},{"Name":"CurrentSetId","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":8,"Item2":null},"Default":"AAAAAAAAAAA=","Docs":[" The number of changes (both in terms of keys and underlying economic responsibilities)"," in the \"set\" of Grandpa validators from genesis."]},{"Name":"SetIdSession","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["Twox64Concat"],"Key":8,"Value":4}},"Default":"AA==","Docs":[" A mapping from grandpa set ID to the index of the *most recent* session for which its"," members were responsible.",""," TWOX-NOTE: `SetId` is not under user control."]}]},"Calls":{"TypeId":106},"Events":{"TypeId":27},"Constants":[{"Name":"MaxAuthorities","TypeId":4,"Value":"IAAAAA==","Docs":[" Max Authorities in use"]}],"Errors":{"TypeId":119},"Index":4},"5":{"Name":"Balances","Storage":{"Prefix":"Balances","Entries":[{"Name":"TotalIssuance","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":6,"Item2":null},"Default":"AAAAAAAAAAAAAAAAAAAAAA==","Docs":[" The total units issued in the system."]},{"Name":"Account","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":0,"Value":5}},"Default":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==","Docs":[" The Balances pallet example of storing the balance of an account.",""," # Example",""," ```nocompile","  impl pallet_balances::Config for Runtime {","    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>","  }"," ```",""," You can also store the balance of an account in the `System` pallet.",""," # Example",""," ```nocompile","  impl pallet_balances::Config for Runtime {","   type AccountStore = System","  }"," ```",""," But this comes with tradeoffs, storing account balances in the system pallet stores"," `frame_system` data alongside the account data contrary to storing account balances in the"," `Balances` pallet, which uses a `StorageMap` to store balances data only."," NOTE: This is only used in the case that this pallet is used to store balances."]},{"Name":"Locks","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":0,"Value":120}},"Default":"AA==","Docs":[" Any liquidity locks on some account balances."," NOTE: Should only be accessed when setting, changing and freeing a lock."]},{"Name":"Reserves","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":0,"Value":124}},"Default":"AA==","Docs":[" Named reserves on some account balances."]},{"Name":"StorageVersion","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":127,"Item2":null},"Default":"AA==","Docs":[" Storage version of the pallet.",""," This is set to v2.0.0 for new networks."]}]},"Calls":{"TypeId":128},"Events":{"TypeId":32},"Constants":[{"Name":"ExistentialDeposit","TypeId":6,"Value":"9AEAAAAAAAAAAAAAAAAAAA==","Docs":[" The minimum amount required to keep an account open."]},{"Name":"MaxLocks","TypeId":4,"Value":"MgAAAA==","Docs":[" The maximum number of locks that should exist on an account."," Not strictly enforced, but used for weight estimation."]},{"Name":"MaxReserves","TypeId":4,"Value":"AAAAAA==","Docs":[" The maximum number of named reserves that can exist on an account."]}],"Errors":{"TypeId":133},"Index":5},"6":{"Name":"TransactionPayment","Storage":{"Prefix":"TransactionPayment","Entries":[{"Name":"NextFeeMultiplier","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":134,"Item2":null},"Default":"AABkp7O24A0AAAAAAAAAAA==","Docs":[]},{"Name":"StorageVersion","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":135,"Item2":null},"Default":"AA==","Docs":[]}]},"Calls":null,"Events":{"TypeId":34},"Constants":[{"Name":"OperationalFeeMultiplier","TypeId":2,"Value":"BQ==","Docs":[" A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their"," `priority`",""," This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later"," added to a tip component in regular `priority` calculations."," It means that a `Normal` transaction can front-run a similarly-sized `Operational`"," extrinsic (with no tip), by including a tip value greater than the virtual tip.",""," ```rust,ignore"," // For `Normal`"," let priority = priority_calc(tip);",""," // For `Operational`"," let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;"," let priority = priority_calc(tip + virtual_tip);"," ```",""," Note that since we use `final_fee` the multiplier applies also to the regular `tip`"," sent with the transaction. So, not only does the transaction get a priority bump based"," on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`"," transactions."]}],"Errors":null,"Index":6},"7":{"Name":"Sudo","Storage":{"Prefix":"Sudo","Entries":[{"Name":"Key","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":0,"Item2":null},"Default":"AA==","Docs":[" The `AccountId` of the sudo key."]}]},"Calls":{"TypeId":136},"Events":{"TypeId":35},"Constants":[],"Errors":{"TypeId":176},"Index":7},"8":{"Name":"TemplateModule","Storage":{"Prefix":"TemplateModule","Entries":[{"Name":"Something","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":4,"Item2":null},"Default":"AA==","Docs":[]}]},"Calls":{"TypeId":138},"Events":{"TypeId":39},"Constants":[],"Errors":{"TypeId":177},"Index":8},"9":{"Name":"Users","Storage":{"Prefix":"Users","Entries":[{"Name":"RegistrarKey","Modifier":"Optional","StorageType":"Plain","TypeMap":{"Item1":0,"Item2":null},"Default":"AA==","Docs":[" The `AccountId` of the Registrar key."]},{"Name":"Slots","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["Twox64Concat"],"Key":4,"Value":178}},"Default":"AA==","Docs":[" Accounts which quotas should be restored when will be active specific slot."]},{"Name":"SlotsLookup","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["Twox64Concat"],"Key":0,"Value":4}},"Default":"AAAAAA==","Docs":[" Lookup from an account to the slot number."]}]},"Calls":{"TypeId":139},"Events":{"TypeId":40},"Constants":[{"Name":"RecoveryPeriod","TypeId":4,"Value":"gFEBAA==","Docs":[" How often is the recovery of the number of tokens. In v1 unchanged, and equal to 24 hours in"," blocks."]},{"Name":"Capacity","TypeId":6,"Value":"AKByThgJAAAAAAAAAAAAAA==","Docs":[" The max capacity of the utility tokens for each user account."]},{"Name":"NumberOfSlots","TypeId":4,"Value":"gFEBAA==","Docs":[" How much slots can be exist in the storage. In v1 unchanged, and equal to RecoveryPeriod in"," blocks."]},{"Name":"AccountsPerSlotLimit","TypeId":4,"Value":"gAAAAA==","Docs":[" Max number of accounts which can hold one slot."]}],"Errors":{"TypeId":180},"Index":9},"10":{"Name":"OrganizationIdentity","Storage":{"Prefix":"OrganizationIdentity","Entries":[{"Name":"Organizations","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":0,"Value":181}},"Default":"AA==","Docs":[" Details of an organization."]},{"Name":"Members","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":0,"Value":37}},"Default":"AA==","Docs":[" Details of an members."," ATTENTION: The store also includes organizations."]},{"Name":"MembersOf","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":183,"Value":37}},"Default":"AA==","Docs":[" Members of organizations."]},{"Name":"UsersOf","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":183,"Value":37}},"Default":"AA==","Docs":[" Users of organizations.",""," Stores users who has been onboarded into the game"]},{"Name":"MemberCount","Modifier":"Default","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":0,"Value":2}},"Default":"AA==","Docs":[" Counts of members in organization."]}]},"Calls":{"TypeId":140},"Events":{"TypeId":41},"Constants":[{"Name":"StringLimit","TypeId":4,"Value":"JAAAAA==","Docs":[" The maximum length of an organization's name stored on-chain."]},{"Name":"MaxMembers","TypeId":2,"Value":"Aw==","Docs":[" The maximum members per organization."]}],"Errors":{"TypeId":184},"Index":10},"11":{"Name":"FungibleAssets","Storage":{"Prefix":"FungibleAssets","Entries":[{"Name":"Assets","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":43,"Value":185}},"Default":"AA==","Docs":[" Details of an asset."]},{"Name":"AssetsOf","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":186,"Value":37}},"Default":"AA==","Docs":[" Asset ids by owners (organizations)."]},{"Name":"Accounts","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":186,"Value":187}},"Default":"AA==","Docs":[" The holdings of a specific account for a specific asset"]},{"Name":"NextAssetId","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":43,"Item2":null},"Default":"AAAAAA==","Docs":[" Storing next asset id"]},{"Name":"TopUppedAssets","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":189,"Item2":null},"Default":"AA==","Docs":[" Storing assets which marked as Top Upped"]},{"Name":"TopUpQueue","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":191,"Value":37}},"Default":"AA==","Docs":[" Accounts with assets which maybe need to top upped in next block."]}]},"Calls":{"TypeId":148},"Events":{"TypeId":42},"Constants":[{"Name":"NameLimit","TypeId":4,"Value":"IAAAAA==","Docs":[" The maximum length of an asset's name stored on-chain."]},{"Name":"MaxTopUppedAssets","TypeId":4,"Value":"/////w==","Docs":[" The maximum number of topupped assets that the pallet can hold."]}],"Errors":{"TypeId":192},"Index":11},"12":{"Name":"NonFungibleAssets","Storage":{"Prefix":"NonFungibleAssets","Entries":[{"Name":"Classes","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat"],"Key":46,"Value":193}},"Default":"AA==","Docs":[" Details of asset classes."]},{"Name":"ClassAccounts","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":194,"Value":37}},"Default":"AA==","Docs":[" The classes owned by any given account."]},{"Name":"Accounts","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat","BlakeTwo128Concat"],"Key":195,"Value":37}},"Default":"AA==","Docs":[" The assets held by any given account."]},{"Name":"Assets","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":196,"Value":197}},"Default":"AA==","Docs":[" Details of assets."]},{"Name":"Attributes","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":199,"Value":49}},"Default":"AA==","Docs":[" Attributes of an assets."]},{"Name":"ClassAttributes","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["BlakeTwo128Concat","BlakeTwo128Concat"],"Key":200,"Value":49}},"Default":"AA==","Docs":[" Attributes of an asset class."]},{"Name":"NextAssetId","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":47,"Item2":null},"Default":"AAAAAA==","Docs":[" Storing the next asset id"]},{"Name":"NextClassId","Modifier":"Default","StorageType":"Plain","TypeMap":{"Item1":46,"Item2":null},"Default":"AAAAAA==","Docs":[" Storing the next class id"]}]},"Calls":{"TypeId":154},"Events":{"TypeId":45},"Constants":[],"Errors":{"TypeId":201},"Index":12},"13":{"Name":"Mechanics","Storage":{"Prefix":"Mechanics","Entries":[{"Name":"Mechanics","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["Twox64Concat","Twox64Concat"],"Key":203,"Value":62}},"Default":"AA==","Docs":[" Store of the Mechanics."]},{"Name":"Timeouts","Modifier":"Optional","StorageType":"Map","TypeMap":{"Item1":0,"Item2":{"Hashers":["Twox64Concat","Twox64Concat","Twox64Concat"],"Key":204,"Value":37}},"Default":"AA==","Docs":[" Schedule when mechanics time out"]}]},"Calls":{"TypeId":172},"Events":{"TypeId":53},"Constants":[{"Name":"AssetsListLimit","TypeId":4,"Value":"QAAAAA==","Docs":[" The maximum list length to pass to mechanics."]},{"Name":"MechanicsLifeTime","TypeId":4,"Value":"LAEAAA==","Docs":[" Life time of the mechanic in number of block. When `current_block + mechanic_lifetime`"," occurs, mechanics will be destroyed."]}],"Errors":{"TypeId":205},"Index":13}},"Extrinsic":{"TypeId":206,"Version":4,"SignedExtensions":[{"SignedIdentifier":"CheckNonZeroSender","SignedExtType":212,"AddSignedExtType":37},{"SignedIdentifier":"CheckSpecVersion","SignedExtType":213,"AddSignedExtType":4},{"SignedIdentifier":"CheckTxVersion","SignedExtType":214,"AddSignedExtType":4},{"SignedIdentifier":"CheckGenesis","SignedExtType":215,"AddSignedExtType":9},{"SignedIdentifier":"CheckMortality","SignedExtType":216,"AddSignedExtType":9},{"SignedIdentifier":"CheckNonce","SignedExtType":218,"AddSignedExtType":37},{"SignedIdentifier":"CheckWeight","SignedExtType":219,"AddSignedExtType":37},{"SignedIdentifier":"ChargeTransactionPayment","SignedExtType":220,"AddSignedExtType":37}]},"TypeId":221}}